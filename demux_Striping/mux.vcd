$date
	Sun Sep 20 23:30:57 2020
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module BancoPruebas $end
$var wire 1 ! valid_out_1 $end
$var wire 1 " valid_out_0 $end
$var wire 1 # valid_in $end
$var wire 1 $ selector $end
$var wire 1 % reset_L $end
$var wire 32 & data_out1 [31:0] $end
$var wire 32 ' data_out0 [31:0] $end
$var wire 32 ( data_in [31:0] $end
$var wire 1 ) clk_f $end
$var wire 1 * clk_2f $end
$scope module cond $end
$var wire 1 # valid_in $end
$var wire 1 $ selector $end
$var wire 1 % reset_L $end
$var wire 32 + data_in [31:0] $end
$var wire 1 ) clk_f $end
$var reg 32 , data_out0 [31:0] $end
$var reg 32 - data_out1 [31:0] $end
$var reg 32 . q1 [31:0] $end
$var reg 32 / q2 [31:0] $end
$var reg 1 0 valid1 $end
$var reg 1 1 valid2 $end
$var reg 1 " valid_out_0 $end
$var reg 1 ! valid_out_1 $end
$upscope $end
$scope module probador_ $end
$var wire 32 2 data_out0 [31:0] $end
$var wire 32 3 data_out1 [31:0] $end
$var wire 1 " valid_out_0 $end
$var wire 1 ! valid_out_1 $end
$var reg 1 * clk_2f $end
$var reg 1 ) clk_f $end
$var reg 32 4 data_in [31:0] $end
$var reg 1 % reset_L $end
$var reg 1 $ selector $end
$var reg 1 # valid_in $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 4
bx 3
bx 2
x1
00
bx /
bx .
bx -
bx ,
bx +
1*
0)
bx (
bx '
bx &
0%
0$
0#
x"
x!
$end
#100
0*
#200
0!
0"
b0 &
b0 -
b0 3
b0 '
b0 ,
b0 2
01
1*
1$
1)
#300
0*
#400
1%
1*
0$
0)
#500
0*
#600
10
b11101110111011101110111011101110 .
11
b11101110111011101110111011101110 /
1#
b11101110111011101110111011101110 (
b11101110111011101110111011101110 +
b11101110111011101110111011101110 4
bx &
bx -
bx 3
bx '
bx ,
bx 2
1*
0$
1)
#700
0*
#800
b11101110111011101110111011101111 /
b11101110111011101110111011101111 (
b11101110111011101110111011101111 +
b11101110111011101110111011101111 4
1*
1$
0)
#900
0*
#1000
b11101110111011101110111011110000 (
b11101110111011101110111011110000 +
b11101110111011101110111011110000 4
1!
b11101110111011101110111011101111 &
b11101110111011101110111011101111 -
b11101110111011101110111011101111 3
1"
b11101110111011101110111011101110 '
b11101110111011101110111011101110 ,
b11101110111011101110111011101110 2
b11101110111011101110111011110000 .
1*
0$
1)
#1100
0*
#1200
b11101110111011101110111011110001 (
b11101110111011101110111011110001 +
b11101110111011101110111011110001 4
b11101110111011101110111011110001 /
1*
1$
0)
#1300
0*
#1400
00
0#
b11101110111011101110111011110001 &
b11101110111011101110111011110001 -
b11101110111011101110111011110001 3
b11101110111011101110111011110000 '
b11101110111011101110111011110000 ,
b11101110111011101110111011110000 2
b11101110111011101110111011110001 .
1*
0$
1)
#1500
0*
#1600
01
1*
1$
0)
#1700
0*
#1800
0!
0"
b11101110111011101110111011110001 '
b11101110111011101110111011110001 ,
b11101110111011101110111011110001 2
1*
0$
1)
#1900
0*
#2000
1*
1$
0)
#2100
0*
#2200
1*
0$
1)
#2300
0*
#2400
1*
1$
0)
