$date
	Mon Sep 21 23:33:26 2020
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module BancoPruebas $end
$var wire 1 ! valid_out $end
$var wire 1 " valid_in1 $end
$var wire 1 # valid_in0 $end
$var wire 1 $ selector $end
$var wire 1 % reset_L $end
$var wire 32 & data_out [31:0] $end
$var wire 32 ' data_in1 [31:0] $end
$var wire 32 ( data_in0 [31:0] $end
$var wire 1 ) clk_f $end
$var wire 1 * clk_2f $end
$scope module cond $end
$var wire 1 " valid_in1 $end
$var wire 1 # valid_in0 $end
$var wire 1 $ selector $end
$var wire 1 % reset_L $end
$var wire 32 + data_in1 [31:0] $end
$var wire 32 , data_in0 [31:0] $end
$var wire 1 * clk_2f $end
$var reg 32 - data_out [31:0] $end
$var reg 32 . q0 [31:0] $end
$var reg 32 / q1 [31:0] $end
$var reg 1 0 valid0 $end
$var reg 1 1 valid1 $end
$var reg 1 ! valid_out $end
$upscope $end
$scope module probador_ $end
$var wire 32 2 data_out [31:0] $end
$var wire 1 ! valid_out $end
$var reg 1 * clk_2f $end
$var reg 1 ) clk_f $end
$var reg 32 3 data_in0 [31:0] $end
$var reg 32 4 data_in1 [31:0] $end
$var reg 1 % reset_L $end
$var reg 1 $ selector $end
$var reg 1 # valid_in0 $end
$var reg 1 " valid_in1 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 4
b0 3
b0 2
01
00
b0 /
b0 .
b0 -
b0 ,
b0 +
1*
0)
b0 (
b0 '
b0 &
0%
0$
0#
0"
0!
$end
#100
0*
#200
1*
1$
1)
#300
0*
#400
1*
0$
0)
#500
0*
#600
1*
1$
1)
#700
0*
#800
1*
0$
0)
#900
0*
#1000
1%
1*
1$
1)
#1100
0*
#1200
1*
0$
0)
#1300
0*
#1400
11
b11101110111011101110111011100000 /
10
b11101110111011101110111011101110 .
1"
1#
b11101110111011101110111011100000 '
b11101110111011101110111011100000 +
b11101110111011101110111011100000 4
b11101110111011101110111011101110 (
b11101110111011101110111011101110 ,
b11101110111011101110111011101110 3
1*
0$
1)
#1500
0*
#1600
1!
b11101110111011101110111011101110 &
b11101110111011101110111011101110 -
b11101110111011101110111011101110 2
1*
1$
0)
#1700
0*
#1800
b11101110111011101110111011100001 /
b11101110111011101110111011101111 .
b11101110111011101110111011100000 &
b11101110111011101110111011100000 -
b11101110111011101110111011100000 2
b11101110111011101110111011100001 '
b11101110111011101110111011100001 +
b11101110111011101110111011100001 4
b11101110111011101110111011101111 (
b11101110111011101110111011101111 ,
b11101110111011101110111011101111 3
1*
0$
1)
#1900
0*
#2000
b11101110111011101110111011101111 &
b11101110111011101110111011101111 -
b11101110111011101110111011101111 2
1*
1$
0)
#2100
0*
#2200
b11101110111011101110111011100010 /
b11101110111011101110111011110000 .
b11101110111011101110111011100001 &
b11101110111011101110111011100001 -
b11101110111011101110111011100001 2
b11101110111011101110111011100010 '
b11101110111011101110111011100010 +
b11101110111011101110111011100010 4
b11101110111011101110111011110000 (
b11101110111011101110111011110000 ,
b11101110111011101110111011110000 3
1*
0$
1)
#2300
0*
#2400
b11101110111011101110111011110000 &
b11101110111011101110111011110000 -
b11101110111011101110111011110000 2
1*
1$
0)
#2500
0*
#2600
b11101110111011101110111011100011 /
b11101110111011101110111011110001 .
b11101110111011101110111011100010 &
b11101110111011101110111011100010 -
b11101110111011101110111011100010 2
b11101110111011101110111011100011 '
b11101110111011101110111011100011 +
b11101110111011101110111011100011 4
b11101110111011101110111011110001 (
b11101110111011101110111011110001 ,
b11101110111011101110111011110001 3
1*
0$
1)
#2700
0*
#2800
b11101110111011101110111011110001 &
b11101110111011101110111011110001 -
b11101110111011101110111011110001 2
1*
1$
0)
#2900
0*
#3000
01
00
b11101110111011101110111011100011 &
b11101110111011101110111011100011 -
b11101110111011101110111011100011 2
0"
0#
1*
0$
1)
#3100
0*
#3200
0!
b11101110111011101110111011110001 &
b11101110111011101110111011110001 -
b11101110111011101110111011110001 2
1*
1$
0)
#3300
0*
#3400
b11101110111011101110111011100011 &
b11101110111011101110111011100011 -
b11101110111011101110111011100011 2
1*
0$
1)
#3500
0*
#3600
b11101110111011101110111011110001 &
b11101110111011101110111011110001 -
b11101110111011101110111011110001 2
1*
1$
0)
#3700
0*
#3800
b11101110111011101110111011100011 &
b11101110111011101110111011100011 -
b11101110111011101110111011100011 2
1*
0$
1)
#3900
0*
#4000
b11101110111011101110111011110001 &
b11101110111011101110111011110001 -
b11101110111011101110111011110001 2
1*
1$
0)
#4100
0*
#4200
b11101110111011101110111011100011 &
b11101110111011101110111011100011 -
b11101110111011101110111011100011 2
1*
0$
1)
#4300
0*
#4400
b11101110111011101110111011110001 &
b11101110111011101110111011110001 -
b11101110111011101110111011110001 2
1*
1$
0)
#4500
0*
#4600
b11101110111011101110111011100011 &
b11101110111011101110111011100011 -
b11101110111011101110111011100011 2
1*
0$
1)
#4700
0*
#4800
b11101110111011101110111011110001 &
b11101110111011101110111011110001 -
b11101110111011101110111011110001 2
1*
1$
0)
#4900
0*
#5000
b11101110111011101110111011100011 &
b11101110111011101110111011100011 -
b11101110111011101110111011100011 2
1*
0$
1)
