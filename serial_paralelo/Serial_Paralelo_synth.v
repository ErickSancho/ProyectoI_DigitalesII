/* Generated by Yosys 0.9+3565 (git sha1 474cd02e, gcc 9.3.0-10ubuntu2 -fPIC -Os) */

(* top =  1  *)
(* src = "Serial_Paralelo_synth.v:1.1-103.10" *)
module Serial_Paralelo_synth(clk_4f, clk_32f, data_in, data_out, valid_out, active);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  (* src = "Serial_Paralelo_synth.v:7.16-7.22" *)
  output active;
  (* src = "Serial_Paralelo_synth.v:13.11-13.17" *)
  wire [7:0] buffer;
  (* src = "Serial_Paralelo_synth.v:3.11-3.18" *)
  input clk_32f;
  (* src = "Serial_Paralelo_synth.v:2.11-2.17" *)
  input clk_4f;
  (* src = "Serial_Paralelo_synth.v:10.11-10.18" *)
  wire [1:0] counter;
  (* src = "Serial_Paralelo_synth.v:4.11-4.18" *)
  input data_in;
  (* src = "Serial_Paralelo_synth.v:5.22-5.30" *)
  output [7:0] data_out;
  (* src = "Serial_Paralelo_synth.v:6.16-6.25" *)
  output valid_out;
  NOT _059_ (
    .A(buffer[7]),
    .Y(_020_)
  );
  NOT _060_ (
    .A(buffer[6]),
    .Y(_021_)
  );
  NOT _061_ (
    .A(buffer[5]),
    .Y(_022_)
  );
  NOT _062_ (
    .A(buffer[4]),
    .Y(_023_)
  );
  NOT _063_ (
    .A(buffer[3]),
    .Y(_024_)
  );
  NOT _064_ (
    .A(buffer[2]),
    .Y(_025_)
  );
  NOT _065_ (
    .A(active),
    .Y(_026_)
  );
  NOT _066_ (
    .A(clk_32f),
    .Y(_007_)
  );
  NOT _067_ (
    .A(counter[1]),
    .Y(_027_)
  );
  NAND _068_ (
    .A(buffer[3]),
    .B(buffer[2]),
    .Y(_028_)
  );
  NOT _069_ (
    .A(_028_),
    .Y(_029_)
  );
  NOR _070_ (
    .A(buffer[1]),
    .B(buffer[0]),
    .Y(_030_)
  );
  NOT _071_ (
    .A(_030_),
    .Y(_031_)
  );
  NOR _072_ (
    .A(_028_),
    .B(_031_),
    .Y(_032_)
  );
  NAND _073_ (
    .A(_029_),
    .B(_030_),
    .Y(_033_)
  );
  NOR _074_ (
    .A(_020_),
    .B(buffer[6]),
    .Y(_034_)
  );
  NAND _075_ (
    .A(buffer[7]),
    .B(_021_),
    .Y(_035_)
  );
  NAND _076_ (
    .A(buffer[5]),
    .B(buffer[4]),
    .Y(_036_)
  );
  NOT _077_ (
    .A(_036_),
    .Y(_037_)
  );
  NOR _078_ (
    .A(_035_),
    .B(_036_),
    .Y(_038_)
  );
  NAND _079_ (
    .A(_034_),
    .B(_037_),
    .Y(_039_)
  );
  NOR _080_ (
    .A(_033_),
    .B(_039_),
    .Y(_040_)
  );
  NAND _081_ (
    .A(_032_),
    .B(_038_),
    .Y(_041_)
  );
  NAND _082_ (
    .A(counter[0]),
    .B(counter[1]),
    .Y(_042_)
  );
  NOT _083_ (
    .A(_042_),
    .Y(_043_)
  );
  NOR _084_ (
    .A(_040_),
    .B(_043_),
    .Y(_044_)
  );
  NAND _085_ (
    .A(_041_),
    .B(_042_),
    .Y(_045_)
  );
  NOR _086_ (
    .A(active),
    .B(_044_),
    .Y(_046_)
  );
  NAND _087_ (
    .A(_026_),
    .B(_045_),
    .Y(_047_)
  );
  NAND _088_ (
    .A(counter[0]),
    .B(_047_),
    .Y(_048_)
  );
  NOR _089_ (
    .A(counter[0]),
    .B(_041_),
    .Y(_049_)
  );
  NAND _090_ (
    .A(_026_),
    .B(_049_),
    .Y(_050_)
  );
  NAND _091_ (
    .A(_048_),
    .B(_050_),
    .Y(_018_)
  );
  NAND _092_ (
    .A(active),
    .B(_041_),
    .Y(_051_)
  );
  NOT _093_ (
    .A(_051_),
    .Y(_008_)
  );
  NOR _094_ (
    .A(_020_),
    .B(_051_),
    .Y(_017_)
  );
  NAND _095_ (
    .A(buffer[6]),
    .B(active),
    .Y(_052_)
  );
  NOT _096_ (
    .A(_052_),
    .Y(_016_)
  );
  NOR _097_ (
    .A(_022_),
    .B(_051_),
    .Y(_015_)
  );
  NOR _098_ (
    .A(_023_),
    .B(_051_),
    .Y(_014_)
  );
  NOR _099_ (
    .A(_024_),
    .B(_051_),
    .Y(_013_)
  );
  NOR _100_ (
    .A(_025_),
    .B(_051_),
    .Y(_012_)
  );
  NAND _101_ (
    .A(buffer[1]),
    .B(active),
    .Y(_053_)
  );
  NOT _102_ (
    .A(_053_),
    .Y(_011_)
  );
  NAND _103_ (
    .A(buffer[0]),
    .B(active),
    .Y(_054_)
  );
  NOT _104_ (
    .A(_054_),
    .Y(_010_)
  );
  NAND _105_ (
    .A(_026_),
    .B(_042_),
    .Y(_009_)
  );
  NOR _106_ (
    .A(counter[0]),
    .B(counter[1]),
    .Y(_055_)
  );
  NOR _107_ (
    .A(_027_),
    .B(_046_),
    .Y(_056_)
  );
  NOR _108_ (
    .A(_041_),
    .B(_009_),
    .Y(_057_)
  );
  NOR _109_ (
    .A(_056_),
    .B(_057_),
    .Y(_058_)
  );
  NOR _110_ (
    .A(_055_),
    .B(_058_),
    .Y(_019_)
  );
  NOT _111_ (
    .A(clk_32f),
    .Y(_006_)
  );
  NOT _112_ (
    .A(clk_32f),
    .Y(_005_)
  );
  NOT _113_ (
    .A(clk_32f),
    .Y(_004_)
  );
  NOT _114_ (
    .A(clk_32f),
    .Y(_003_)
  );
  NOT _115_ (
    .A(clk_32f),
    .Y(_002_)
  );
  NOT _116_ (
    .A(clk_32f),
    .Y(_001_)
  );
  NOT _117_ (
    .A(clk_32f),
    .Y(_000_)
  );
  (* src = "Serial_Paralelo_synth.v:20.1-30.4" *)
  DFF _118_ (
    .C(_000_),
    .D(data_in),
    .Q(buffer[0])
  );
  (* src = "Serial_Paralelo_synth.v:20.1-30.4" *)
  DFF _119_ (
    .C(_001_),
    .D(buffer[0]),
    .Q(buffer[1])
  );
  (* src = "Serial_Paralelo_synth.v:20.1-30.4" *)
  DFF _120_ (
    .C(_002_),
    .D(buffer[1]),
    .Q(buffer[2])
  );
  (* src = "Serial_Paralelo_synth.v:20.1-30.4" *)
  DFF _121_ (
    .C(_003_),
    .D(buffer[2]),
    .Q(buffer[3])
  );
  (* src = "Serial_Paralelo_synth.v:20.1-30.4" *)
  DFF _122_ (
    .C(_004_),
    .D(buffer[3]),
    .Q(buffer[4])
  );
  (* src = "Serial_Paralelo_synth.v:20.1-30.4" *)
  DFF _123_ (
    .C(_005_),
    .D(buffer[4]),
    .Q(buffer[5])
  );
  (* src = "Serial_Paralelo_synth.v:20.1-30.4" *)
  DFF _124_ (
    .C(_006_),
    .D(buffer[5]),
    .Q(buffer[6])
  );
  (* src = "Serial_Paralelo_synth.v:20.1-30.4" *)
  DFF _125_ (
    .C(_007_),
    .D(buffer[6]),
    .Q(buffer[7])
  );
  (* src = "Serial_Paralelo_synth.v:34.1-75.4" *)
  DFF _126_ (
    .C(clk_4f),
    .D(_008_),
    .Q(valid_out)
  );
  (* src = "Serial_Paralelo_synth.v:34.1-75.4" *)
  DFF _127_ (
    .C(clk_4f),
    .D(_009_),
    .Q(active)
  );
  (* src = "Serial_Paralelo_synth.v:34.1-75.4" *)
  DFF _128_ (
    .C(clk_4f),
    .D(_010_),
    .Q(data_out[0])
  );
  (* src = "Serial_Paralelo_synth.v:34.1-75.4" *)
  DFF _129_ (
    .C(clk_4f),
    .D(_011_),
    .Q(data_out[1])
  );
  (* src = "Serial_Paralelo_synth.v:34.1-75.4" *)
  DFF _130_ (
    .C(clk_4f),
    .D(_012_),
    .Q(data_out[2])
  );
  (* src = "Serial_Paralelo_synth.v:34.1-75.4" *)
  DFF _131_ (
    .C(clk_4f),
    .D(_013_),
    .Q(data_out[3])
  );
  (* src = "Serial_Paralelo_synth.v:34.1-75.4" *)
  DFF _132_ (
    .C(clk_4f),
    .D(_014_),
    .Q(data_out[4])
  );
  (* src = "Serial_Paralelo_synth.v:34.1-75.4" *)
  DFF _133_ (
    .C(clk_4f),
    .D(_015_),
    .Q(data_out[5])
  );
  (* src = "Serial_Paralelo_synth.v:34.1-75.4" *)
  DFF _134_ (
    .C(clk_4f),
    .D(_016_),
    .Q(data_out[6])
  );
  (* src = "Serial_Paralelo_synth.v:34.1-75.4" *)
  DFF _135_ (
    .C(clk_4f),
    .D(_017_),
    .Q(data_out[7])
  );
  (* src = "Serial_Paralelo_synth.v:34.1-75.4" *)
  DFF _136_ (
    .C(clk_4f),
    .D(_018_),
    .Q(counter[0])
  );
  (* src = "Serial_Paralelo_synth.v:34.1-75.4" *)
  DFF _137_ (
    .C(clk_4f),
    .D(_019_),
    .Q(counter[1])
  );
endmodule
