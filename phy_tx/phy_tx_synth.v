/* Generated by Yosys 0.9+3565 (git sha1 474cd02e, gcc 9.3.0-10ubuntu2 -fPIC -Os) */

(* src = "Demux32_8_synth.v:1.1-52.10" *)
module Demux32_8_synth(clk_f, clk_4f, data_in, valid_in, data_out, valid_out);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  (* src = "Demux32_8_synth.v:3.11-3.17" *)
  input clk_4f;
  (* src = "Demux32_8_synth.v:2.11-2.16" *)
  input clk_f;
  (* init = 3'h0 *)
  (* src = "Demux32_8_synth.v:10.11-10.18" *)
  wire [2:0] counter;
  (* src = "Demux32_8_synth.v:4.18-4.25" *)
  input [31:0] data_in;
  (* src = "Demux32_8_synth.v:6.22-6.30" *)
  output [7:0] data_out;
  (* src = "Demux32_8_synth.v:5.11-5.19" *)
  input valid_in;
  (* src = "Demux32_8_synth.v:7.16-7.25" *)
  output valid_out;
  NOT _148_ (
    .A(data_out[7]),
    .Y(_111_)
  );
  NOT _149_ (
    .A(valid_in),
    .Y(_112_)
  );
  NOT _150_ (
    .A(data_out[6]),
    .Y(_113_)
  );
  NOT _151_ (
    .A(data_out[5]),
    .Y(_114_)
  );
  NOT _152_ (
    .A(data_out[4]),
    .Y(_115_)
  );
  NOT _153_ (
    .A(data_out[3]),
    .Y(_116_)
  );
  NOT _154_ (
    .A(data_out[2]),
    .Y(_117_)
  );
  NOT _155_ (
    .A(data_out[1]),
    .Y(_118_)
  );
  NOT _156_ (
    .A(data_out[0]),
    .Y(_119_)
  );
  NOT _157_ (
    .A(clk_4f),
    .Y(_002_)
  );
  NOT _158_ (
    .A(counter[1]),
    .Y(_120_)
  );
  NOT _159_ (
    .A(counter[0]),
    .Y(_121_)
  );
  NOT _160_ (
    .A(data_in[0]),
    .Y(_122_)
  );
  NOT _161_ (
    .A(data_in[1]),
    .Y(_123_)
  );
  NOT _162_ (
    .A(data_in[2]),
    .Y(_124_)
  );
  NOT _163_ (
    .A(data_in[3]),
    .Y(_125_)
  );
  NOT _164_ (
    .A(data_in[4]),
    .Y(_126_)
  );
  NOT _165_ (
    .A(data_in[5]),
    .Y(_127_)
  );
  NOT _166_ (
    .A(data_in[6]),
    .Y(_128_)
  );
  NOT _167_ (
    .A(data_in[7]),
    .Y(_129_)
  );
  NOT _168_ (
    .A(data_in[8]),
    .Y(_130_)
  );
  NOT _169_ (
    .A(data_in[9]),
    .Y(_131_)
  );
  NOT _170_ (
    .A(data_in[10]),
    .Y(_132_)
  );
  NOT _171_ (
    .A(data_in[11]),
    .Y(_133_)
  );
  NOT _172_ (
    .A(data_in[12]),
    .Y(_134_)
  );
  NOT _173_ (
    .A(data_in[13]),
    .Y(_135_)
  );
  NOT _174_ (
    .A(data_in[14]),
    .Y(_136_)
  );
  NOT _175_ (
    .A(data_in[15]),
    .Y(_137_)
  );
  NOT _176_ (
    .A(data_in[16]),
    .Y(_138_)
  );
  NOT _177_ (
    .A(data_in[17]),
    .Y(_139_)
  );
  NOT _178_ (
    .A(data_in[18]),
    .Y(_140_)
  );
  NOT _179_ (
    .A(data_in[19]),
    .Y(_141_)
  );
  NOT _180_ (
    .A(data_in[20]),
    .Y(_142_)
  );
  NOT _181_ (
    .A(data_in[21]),
    .Y(_143_)
  );
  NOT _182_ (
    .A(data_in[22]),
    .Y(_144_)
  );
  NOT _183_ (
    .A(data_in[23]),
    .Y(_145_)
  );
  NOT _184_ (
    .A(data_in[24]),
    .Y(_146_)
  );
  NOT _185_ (
    .A(data_in[25]),
    .Y(_147_)
  );
  NOT _186_ (
    .A(data_in[26]),
    .Y(_015_)
  );
  NOT _187_ (
    .A(data_in[27]),
    .Y(_016_)
  );
  NOT _188_ (
    .A(data_in[28]),
    .Y(_017_)
  );
  NOT _189_ (
    .A(data_in[29]),
    .Y(_018_)
  );
  NOT _190_ (
    .A(data_in[30]),
    .Y(_019_)
  );
  NOT _191_ (
    .A(data_in[31]),
    .Y(_020_)
  );
  NOR _192_ (
    .A(counter[1]),
    .B(counter[0]),
    .Y(_021_)
  );
  NOT _193_ (
    .A(_021_),
    .Y(_022_)
  );
  NAND _194_ (
    .A(counter[2]),
    .B(_021_),
    .Y(_023_)
  );
  NOR _195_ (
    .A(counter[2]),
    .B(_021_),
    .Y(_024_)
  );
  NOT _196_ (
    .A(_024_),
    .Y(_025_)
  );
  NAND _197_ (
    .A(_023_),
    .B(_025_),
    .Y(_026_)
  );
  NOR _198_ (
    .A(_113_),
    .B(_026_),
    .Y(_027_)
  );
  NOR _199_ (
    .A(_128_),
    .B(_023_),
    .Y(_028_)
  );
  NOR _200_ (
    .A(counter[2]),
    .B(_120_),
    .Y(_029_)
  );
  NAND _201_ (
    .A(_121_),
    .B(_029_),
    .Y(_030_)
  );
  NOR _202_ (
    .A(_144_),
    .B(_030_),
    .Y(_031_)
  );
  NOR _203_ (
    .A(_028_),
    .B(_031_),
    .Y(_032_)
  );
  NAND _204_ (
    .A(counter[1]),
    .B(counter[0]),
    .Y(_033_)
  );
  NOT _205_ (
    .A(_033_),
    .Y(_034_)
  );
  NOR _206_ (
    .A(counter[2]),
    .B(_033_),
    .Y(_035_)
  );
  NAND _207_ (
    .A(counter[0]),
    .B(_029_),
    .Y(_036_)
  );
  NOR _208_ (
    .A(_136_),
    .B(_036_),
    .Y(_037_)
  );
  NOR _209_ (
    .A(counter[2]),
    .B(counter[1]),
    .Y(_038_)
  );
  NAND _210_ (
    .A(counter[0]),
    .B(_038_),
    .Y(_039_)
  );
  NOR _211_ (
    .A(_019_),
    .B(_039_),
    .Y(_040_)
  );
  NOR _212_ (
    .A(_037_),
    .B(_040_),
    .Y(_041_)
  );
  NAND _213_ (
    .A(_032_),
    .B(_041_),
    .Y(_042_)
  );
  NOR _214_ (
    .A(_027_),
    .B(_042_),
    .Y(_043_)
  );
  NOR _215_ (
    .A(_112_),
    .B(_043_),
    .Y(_013_)
  );
  NOR _216_ (
    .A(_114_),
    .B(_026_),
    .Y(_044_)
  );
  NOR _217_ (
    .A(_135_),
    .B(_036_),
    .Y(_045_)
  );
  NOR _218_ (
    .A(_127_),
    .B(_023_),
    .Y(_046_)
  );
  NOR _219_ (
    .A(_045_),
    .B(_046_),
    .Y(_047_)
  );
  NOR _220_ (
    .A(_143_),
    .B(_030_),
    .Y(_048_)
  );
  NOR _221_ (
    .A(_018_),
    .B(_039_),
    .Y(_049_)
  );
  NOR _222_ (
    .A(_048_),
    .B(_049_),
    .Y(_050_)
  );
  NAND _223_ (
    .A(_047_),
    .B(_050_),
    .Y(_051_)
  );
  NOR _224_ (
    .A(_044_),
    .B(_051_),
    .Y(_052_)
  );
  NOR _225_ (
    .A(_112_),
    .B(_052_),
    .Y(_012_)
  );
  NOR _226_ (
    .A(_115_),
    .B(_026_),
    .Y(_053_)
  );
  NOR _227_ (
    .A(_126_),
    .B(_023_),
    .Y(_054_)
  );
  NOR _228_ (
    .A(_142_),
    .B(_030_),
    .Y(_055_)
  );
  NOR _229_ (
    .A(_054_),
    .B(_055_),
    .Y(_056_)
  );
  NOR _230_ (
    .A(_134_),
    .B(_036_),
    .Y(_057_)
  );
  NOR _231_ (
    .A(_017_),
    .B(_039_),
    .Y(_058_)
  );
  NOR _232_ (
    .A(_057_),
    .B(_058_),
    .Y(_059_)
  );
  NAND _233_ (
    .A(_056_),
    .B(_059_),
    .Y(_060_)
  );
  NOR _234_ (
    .A(_053_),
    .B(_060_),
    .Y(_061_)
  );
  NOR _235_ (
    .A(_112_),
    .B(_061_),
    .Y(_011_)
  );
  NOR _236_ (
    .A(_116_),
    .B(_026_),
    .Y(_062_)
  );
  NOR _237_ (
    .A(_125_),
    .B(_023_),
    .Y(_063_)
  );
  NOR _238_ (
    .A(_016_),
    .B(_039_),
    .Y(_064_)
  );
  NOR _239_ (
    .A(_063_),
    .B(_064_),
    .Y(_065_)
  );
  NOR _240_ (
    .A(_141_),
    .B(_030_),
    .Y(_066_)
  );
  NOR _241_ (
    .A(_133_),
    .B(_036_),
    .Y(_067_)
  );
  NOR _242_ (
    .A(_066_),
    .B(_067_),
    .Y(_068_)
  );
  NAND _243_ (
    .A(_065_),
    .B(_068_),
    .Y(_069_)
  );
  NOR _244_ (
    .A(_062_),
    .B(_069_),
    .Y(_070_)
  );
  NOR _245_ (
    .A(_112_),
    .B(_070_),
    .Y(_010_)
  );
  NOR _246_ (
    .A(_117_),
    .B(_026_),
    .Y(_071_)
  );
  NOR _247_ (
    .A(_132_),
    .B(_036_),
    .Y(_072_)
  );
  NOR _248_ (
    .A(_124_),
    .B(_023_),
    .Y(_073_)
  );
  NOR _249_ (
    .A(_072_),
    .B(_073_),
    .Y(_074_)
  );
  NOR _250_ (
    .A(_140_),
    .B(_030_),
    .Y(_075_)
  );
  NOR _251_ (
    .A(_015_),
    .B(_039_),
    .Y(_076_)
  );
  NOR _252_ (
    .A(_075_),
    .B(_076_),
    .Y(_077_)
  );
  NAND _253_ (
    .A(_074_),
    .B(_077_),
    .Y(_078_)
  );
  NOR _254_ (
    .A(_071_),
    .B(_078_),
    .Y(_079_)
  );
  NOR _255_ (
    .A(_112_),
    .B(_079_),
    .Y(_009_)
  );
  NOR _256_ (
    .A(_118_),
    .B(_026_),
    .Y(_080_)
  );
  NOR _257_ (
    .A(_131_),
    .B(_036_),
    .Y(_081_)
  );
  NOR _258_ (
    .A(_123_),
    .B(_023_),
    .Y(_082_)
  );
  NOR _259_ (
    .A(_081_),
    .B(_082_),
    .Y(_083_)
  );
  NOR _260_ (
    .A(_139_),
    .B(_030_),
    .Y(_084_)
  );
  NOR _261_ (
    .A(_147_),
    .B(_039_),
    .Y(_085_)
  );
  NOR _262_ (
    .A(_084_),
    .B(_085_),
    .Y(_086_)
  );
  NAND _263_ (
    .A(_083_),
    .B(_086_),
    .Y(_087_)
  );
  NOR _264_ (
    .A(_080_),
    .B(_087_),
    .Y(_088_)
  );
  NOR _265_ (
    .A(_112_),
    .B(_088_),
    .Y(_008_)
  );
  NOR _266_ (
    .A(_119_),
    .B(_026_),
    .Y(_089_)
  );
  NOR _267_ (
    .A(_122_),
    .B(_023_),
    .Y(_090_)
  );
  NOR _268_ (
    .A(_138_),
    .B(_030_),
    .Y(_091_)
  );
  NOR _269_ (
    .A(_090_),
    .B(_091_),
    .Y(_092_)
  );
  NOR _270_ (
    .A(_130_),
    .B(_036_),
    .Y(_093_)
  );
  NOR _271_ (
    .A(_146_),
    .B(_039_),
    .Y(_094_)
  );
  NOR _272_ (
    .A(_093_),
    .B(_094_),
    .Y(_095_)
  );
  NAND _273_ (
    .A(_092_),
    .B(_095_),
    .Y(_096_)
  );
  NOR _274_ (
    .A(_089_),
    .B(_096_),
    .Y(_097_)
  );
  NOR _275_ (
    .A(_112_),
    .B(_097_),
    .Y(_007_)
  );
  NOR _276_ (
    .A(valid_out),
    .B(_026_),
    .Y(_098_)
  );
  NOR _277_ (
    .A(_112_),
    .B(_098_),
    .Y(_006_)
  );
  NOR _278_ (
    .A(_112_),
    .B(counter[0]),
    .Y(_005_)
  );
  NAND _279_ (
    .A(valid_in),
    .B(_035_),
    .Y(_099_)
  );
  NAND _280_ (
    .A(valid_in),
    .B(_022_),
    .Y(_100_)
  );
  NOR _281_ (
    .A(_034_),
    .B(_100_),
    .Y(_003_)
  );
  NAND _282_ (
    .A(counter[2]),
    .B(_003_),
    .Y(_101_)
  );
  NAND _283_ (
    .A(_099_),
    .B(_101_),
    .Y(_004_)
  );
  NOR _284_ (
    .A(_111_),
    .B(_026_),
    .Y(_102_)
  );
  NOR _285_ (
    .A(_129_),
    .B(_023_),
    .Y(_103_)
  );
  NOR _286_ (
    .A(_145_),
    .B(_030_),
    .Y(_104_)
  );
  NOR _287_ (
    .A(_103_),
    .B(_104_),
    .Y(_105_)
  );
  NOR _288_ (
    .A(_137_),
    .B(_036_),
    .Y(_106_)
  );
  NOR _289_ (
    .A(_020_),
    .B(_039_),
    .Y(_107_)
  );
  NOR _290_ (
    .A(_106_),
    .B(_107_),
    .Y(_108_)
  );
  NAND _291_ (
    .A(_105_),
    .B(_108_),
    .Y(_109_)
  );
  NOR _292_ (
    .A(_102_),
    .B(_109_),
    .Y(_110_)
  );
  NOR _293_ (
    .A(_112_),
    .B(_110_),
    .Y(_014_)
  );
  NOT _294_ (
    .A(clk_4f),
    .Y(_001_)
  );
  NOT _295_ (
    .A(clk_4f),
    .Y(_000_)
  );
  (* src = "Demux32_8_synth.v:15.1-25.4" *)
  DFF _296_ (
    .C(_000_),
    .D(_003_),
    .Q(counter[1])
  );
  (* src = "Demux32_8_synth.v:15.1-25.4" *)
  DFF _297_ (
    .C(_001_),
    .D(_004_),
    .Q(counter[2])
  );
  (* src = "Demux32_8_synth.v:15.1-25.4" *)
  DFF _298_ (
    .C(_002_),
    .D(_005_),
    .Q(counter[0])
  );
  (* src = "Demux32_8_synth.v:28.1-49.4" *)
  DFF _299_ (
    .C(clk_4f),
    .D(_006_),
    .Q(valid_out)
  );
  (* src = "Demux32_8_synth.v:28.1-49.4" *)
  DFF _300_ (
    .C(clk_4f),
    .D(_007_),
    .Q(data_out[0])
  );
  (* src = "Demux32_8_synth.v:28.1-49.4" *)
  DFF _301_ (
    .C(clk_4f),
    .D(_008_),
    .Q(data_out[1])
  );
  (* src = "Demux32_8_synth.v:28.1-49.4" *)
  DFF _302_ (
    .C(clk_4f),
    .D(_009_),
    .Q(data_out[2])
  );
  (* src = "Demux32_8_synth.v:28.1-49.4" *)
  DFF _303_ (
    .C(clk_4f),
    .D(_010_),
    .Q(data_out[3])
  );
  (* src = "Demux32_8_synth.v:28.1-49.4" *)
  DFF _304_ (
    .C(clk_4f),
    .D(_011_),
    .Q(data_out[4])
  );
  (* src = "Demux32_8_synth.v:28.1-49.4" *)
  DFF _305_ (
    .C(clk_4f),
    .D(_012_),
    .Q(data_out[5])
  );
  (* src = "Demux32_8_synth.v:28.1-49.4" *)
  DFF _306_ (
    .C(clk_4f),
    .D(_013_),
    .Q(data_out[6])
  );
  (* src = "Demux32_8_synth.v:28.1-49.4" *)
  DFF _307_ (
    .C(clk_4f),
    .D(_014_),
    .Q(data_out[7])
  );
endmodule

(* src = "demux_striping_synth.v:1.1-49.10" *)
module demux_striping_synth(clk_2f, reset_L, data_in, valid_in, data_out0, data_out1, valid_out_0, valid_out_1);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  wire _260_;
  wire _261_;
  wire _262_;
  wire _263_;
  wire _264_;
  wire _265_;
  wire _266_;
  wire _267_;
  wire _268_;
  wire _269_;
  wire _270_;
  wire _271_;
  wire _272_;
  wire _273_;
  wire _274_;
  wire _275_;
  wire _276_;
  wire _277_;
  wire _278_;
  wire _279_;
  wire _280_;
  wire _281_;
  wire _282_;
  wire _283_;
  wire _284_;
  wire _285_;
  wire _286_;
  wire _287_;
  wire _288_;
  wire _289_;
  wire _290_;
  wire _291_;
  wire _292_;
  wire _293_;
  wire _294_;
  wire _295_;
  wire _296_;
  wire _297_;
  wire _298_;
  wire _299_;
  wire _300_;
  wire _301_;
  wire _302_;
  wire _303_;
  wire _304_;
  wire _305_;
  wire _306_;
  wire _307_;
  wire _308_;
  wire _309_;
  wire _310_;
  wire _311_;
  wire _312_;
  wire _313_;
  wire _314_;
  wire _315_;
  wire _316_;
  wire _317_;
  wire _318_;
  wire _319_;
  wire _320_;
  wire _321_;
  wire _322_;
  wire _323_;
  wire _324_;
  wire _325_;
  wire _326_;
  wire _327_;
  wire _328_;
  wire _329_;
  wire _330_;
  wire _331_;
  wire _332_;
  wire _333_;
  wire _334_;
  wire _335_;
  (* src = "demux_striping_synth.v:2.11-2.17" *)
  input clk_2f;
  (* src = "demux_striping_synth.v:4.18-4.25" *)
  input [31:0] data_in;
  (* src = "demux_striping_synth.v:6.23-6.32" *)
  output [31:0] data_out0;
  (* src = "demux_striping_synth.v:7.23-7.32" *)
  output [31:0] data_out1;
  (* src = "demux_striping_synth.v:3.11-3.18" *)
  input reset_L;
  (* src = "demux_striping_synth.v:11.9-11.24" *)
  wire selectorInterno;
  (* src = "demux_striping_synth.v:5.11-5.19" *)
  input valid_in;
  (* src = "demux_striping_synth.v:8.16-8.27" *)
  output valid_out_0;
  (* src = "demux_striping_synth.v:9.16-9.27" *)
  output valid_out_1;
  NOT _336_ (
    .A(valid_in),
    .Y(_067_)
  );
  NOT _337_ (
    .A(selectorInterno),
    .Y(_068_)
  );
  NOT _338_ (
    .A(valid_out_0),
    .Y(_069_)
  );
  NOT _339_ (
    .A(data_in[31]),
    .Y(_070_)
  );
  NOT _340_ (
    .A(data_in[30]),
    .Y(_071_)
  );
  NOT _341_ (
    .A(data_in[29]),
    .Y(_072_)
  );
  NOT _342_ (
    .A(data_in[28]),
    .Y(_073_)
  );
  NOT _343_ (
    .A(data_in[27]),
    .Y(_074_)
  );
  NOT _344_ (
    .A(data_in[26]),
    .Y(_075_)
  );
  NOT _345_ (
    .A(data_in[25]),
    .Y(_076_)
  );
  NOT _346_ (
    .A(data_in[24]),
    .Y(_077_)
  );
  NOT _347_ (
    .A(data_in[23]),
    .Y(_078_)
  );
  NOT _348_ (
    .A(data_in[22]),
    .Y(_079_)
  );
  NOT _349_ (
    .A(data_in[21]),
    .Y(_080_)
  );
  NOT _350_ (
    .A(data_in[20]),
    .Y(_081_)
  );
  NOT _351_ (
    .A(data_in[19]),
    .Y(_082_)
  );
  NOT _352_ (
    .A(data_in[18]),
    .Y(_083_)
  );
  NOT _353_ (
    .A(data_in[17]),
    .Y(_084_)
  );
  NOT _354_ (
    .A(data_in[16]),
    .Y(_085_)
  );
  NOT _355_ (
    .A(data_in[15]),
    .Y(_086_)
  );
  NOT _356_ (
    .A(data_in[14]),
    .Y(_087_)
  );
  NOT _357_ (
    .A(data_in[13]),
    .Y(_088_)
  );
  NOT _358_ (
    .A(data_in[12]),
    .Y(_089_)
  );
  NOT _359_ (
    .A(data_in[11]),
    .Y(_090_)
  );
  NOT _360_ (
    .A(data_in[10]),
    .Y(_091_)
  );
  NOT _361_ (
    .A(data_in[9]),
    .Y(_092_)
  );
  NOT _362_ (
    .A(data_in[8]),
    .Y(_093_)
  );
  NOT _363_ (
    .A(data_in[7]),
    .Y(_094_)
  );
  NOT _364_ (
    .A(data_in[6]),
    .Y(_095_)
  );
  NOT _365_ (
    .A(data_in[5]),
    .Y(_096_)
  );
  NOT _366_ (
    .A(data_in[4]),
    .Y(_097_)
  );
  NOT _367_ (
    .A(data_in[3]),
    .Y(_098_)
  );
  NOT _368_ (
    .A(data_in[2]),
    .Y(_099_)
  );
  NOT _369_ (
    .A(data_in[1]),
    .Y(_100_)
  );
  NOT _370_ (
    .A(data_in[0]),
    .Y(_101_)
  );
  NOT _371_ (
    .A(data_out0[31]),
    .Y(_102_)
  );
  NOT _372_ (
    .A(data_out0[30]),
    .Y(_103_)
  );
  NOT _373_ (
    .A(data_out0[29]),
    .Y(_104_)
  );
  NOT _374_ (
    .A(data_out0[28]),
    .Y(_105_)
  );
  NOT _375_ (
    .A(data_out0[27]),
    .Y(_106_)
  );
  NOT _376_ (
    .A(data_out0[26]),
    .Y(_107_)
  );
  NOT _377_ (
    .A(data_out0[25]),
    .Y(_108_)
  );
  NOT _378_ (
    .A(data_out0[24]),
    .Y(_109_)
  );
  NOT _379_ (
    .A(data_out0[23]),
    .Y(_110_)
  );
  NOT _380_ (
    .A(data_out0[22]),
    .Y(_111_)
  );
  NOT _381_ (
    .A(data_out0[21]),
    .Y(_112_)
  );
  NOT _382_ (
    .A(data_out0[20]),
    .Y(_113_)
  );
  NOT _383_ (
    .A(data_out0[19]),
    .Y(_114_)
  );
  NOT _384_ (
    .A(data_out0[18]),
    .Y(_115_)
  );
  NOT _385_ (
    .A(data_out0[17]),
    .Y(_116_)
  );
  NOT _386_ (
    .A(data_out0[16]),
    .Y(_117_)
  );
  NOT _387_ (
    .A(data_out0[15]),
    .Y(_118_)
  );
  NOT _388_ (
    .A(data_out0[14]),
    .Y(_119_)
  );
  NOT _389_ (
    .A(data_out0[13]),
    .Y(_120_)
  );
  NOT _390_ (
    .A(data_out0[12]),
    .Y(_121_)
  );
  NOT _391_ (
    .A(data_out0[11]),
    .Y(_122_)
  );
  NOT _392_ (
    .A(data_out0[10]),
    .Y(_123_)
  );
  NOT _393_ (
    .A(data_out0[9]),
    .Y(_124_)
  );
  NOT _394_ (
    .A(data_out0[8]),
    .Y(_125_)
  );
  NOT _395_ (
    .A(data_out0[7]),
    .Y(_126_)
  );
  NOT _396_ (
    .A(data_out0[6]),
    .Y(_127_)
  );
  NOT _397_ (
    .A(data_out0[5]),
    .Y(_128_)
  );
  NOT _398_ (
    .A(data_out0[4]),
    .Y(_129_)
  );
  NOT _399_ (
    .A(data_out0[3]),
    .Y(_130_)
  );
  NOT _400_ (
    .A(data_out0[2]),
    .Y(_131_)
  );
  NOT _401_ (
    .A(data_out0[1]),
    .Y(_132_)
  );
  NOT _402_ (
    .A(data_out0[0]),
    .Y(_133_)
  );
  NOR _403_ (
    .A(valid_in),
    .B(selectorInterno),
    .Y(_134_)
  );
  NAND _404_ (
    .A(selectorInterno),
    .B(_069_),
    .Y(_135_)
  );
  NAND _405_ (
    .A(reset_L),
    .B(_135_),
    .Y(_136_)
  );
  NOR _406_ (
    .A(_134_),
    .B(_136_),
    .Y(_065_)
  );
  NOR _407_ (
    .A(selectorInterno),
    .B(data_out1[31]),
    .Y(_137_)
  );
  NAND _408_ (
    .A(selectorInterno),
    .B(_070_),
    .Y(_138_)
  );
  NAND _409_ (
    .A(reset_L),
    .B(_138_),
    .Y(_139_)
  );
  NOR _410_ (
    .A(_137_),
    .B(_139_),
    .Y(_064_)
  );
  NOR _411_ (
    .A(selectorInterno),
    .B(data_out1[30]),
    .Y(_140_)
  );
  NAND _412_ (
    .A(selectorInterno),
    .B(_071_),
    .Y(_141_)
  );
  NAND _413_ (
    .A(reset_L),
    .B(_141_),
    .Y(_142_)
  );
  NOR _414_ (
    .A(_140_),
    .B(_142_),
    .Y(_063_)
  );
  NOR _415_ (
    .A(selectorInterno),
    .B(data_out1[29]),
    .Y(_143_)
  );
  NAND _416_ (
    .A(selectorInterno),
    .B(_072_),
    .Y(_144_)
  );
  NAND _417_ (
    .A(reset_L),
    .B(_144_),
    .Y(_145_)
  );
  NOR _418_ (
    .A(_143_),
    .B(_145_),
    .Y(_062_)
  );
  NOR _419_ (
    .A(selectorInterno),
    .B(data_out1[28]),
    .Y(_146_)
  );
  NAND _420_ (
    .A(selectorInterno),
    .B(_073_),
    .Y(_147_)
  );
  NAND _421_ (
    .A(reset_L),
    .B(_147_),
    .Y(_148_)
  );
  NOR _422_ (
    .A(_146_),
    .B(_148_),
    .Y(_061_)
  );
  NOR _423_ (
    .A(selectorInterno),
    .B(data_out1[27]),
    .Y(_149_)
  );
  NAND _424_ (
    .A(selectorInterno),
    .B(_074_),
    .Y(_150_)
  );
  NAND _425_ (
    .A(reset_L),
    .B(_150_),
    .Y(_151_)
  );
  NOR _426_ (
    .A(_149_),
    .B(_151_),
    .Y(_060_)
  );
  NOR _427_ (
    .A(selectorInterno),
    .B(data_out1[26]),
    .Y(_152_)
  );
  NAND _428_ (
    .A(selectorInterno),
    .B(_075_),
    .Y(_153_)
  );
  NAND _429_ (
    .A(reset_L),
    .B(_153_),
    .Y(_154_)
  );
  NOR _430_ (
    .A(_152_),
    .B(_154_),
    .Y(_059_)
  );
  NOR _431_ (
    .A(selectorInterno),
    .B(data_out1[25]),
    .Y(_155_)
  );
  NAND _432_ (
    .A(selectorInterno),
    .B(_076_),
    .Y(_156_)
  );
  NAND _433_ (
    .A(reset_L),
    .B(_156_),
    .Y(_157_)
  );
  NOR _434_ (
    .A(_155_),
    .B(_157_),
    .Y(_058_)
  );
  NOR _435_ (
    .A(selectorInterno),
    .B(data_out1[24]),
    .Y(_158_)
  );
  NAND _436_ (
    .A(selectorInterno),
    .B(_077_),
    .Y(_159_)
  );
  NAND _437_ (
    .A(reset_L),
    .B(_159_),
    .Y(_160_)
  );
  NOR _438_ (
    .A(_158_),
    .B(_160_),
    .Y(_057_)
  );
  NOR _439_ (
    .A(selectorInterno),
    .B(data_out1[23]),
    .Y(_161_)
  );
  NAND _440_ (
    .A(selectorInterno),
    .B(_078_),
    .Y(_162_)
  );
  NAND _441_ (
    .A(reset_L),
    .B(_162_),
    .Y(_163_)
  );
  NOR _442_ (
    .A(_161_),
    .B(_163_),
    .Y(_056_)
  );
  NOR _443_ (
    .A(selectorInterno),
    .B(data_out1[22]),
    .Y(_164_)
  );
  NAND _444_ (
    .A(selectorInterno),
    .B(_079_),
    .Y(_165_)
  );
  NAND _445_ (
    .A(reset_L),
    .B(_165_),
    .Y(_166_)
  );
  NOR _446_ (
    .A(_164_),
    .B(_166_),
    .Y(_055_)
  );
  NOR _447_ (
    .A(selectorInterno),
    .B(data_out1[21]),
    .Y(_167_)
  );
  NAND _448_ (
    .A(selectorInterno),
    .B(_080_),
    .Y(_168_)
  );
  NAND _449_ (
    .A(reset_L),
    .B(_168_),
    .Y(_169_)
  );
  NOR _450_ (
    .A(_167_),
    .B(_169_),
    .Y(_054_)
  );
  NOR _451_ (
    .A(selectorInterno),
    .B(data_out1[20]),
    .Y(_170_)
  );
  NAND _452_ (
    .A(selectorInterno),
    .B(_081_),
    .Y(_171_)
  );
  NAND _453_ (
    .A(reset_L),
    .B(_171_),
    .Y(_172_)
  );
  NOR _454_ (
    .A(_170_),
    .B(_172_),
    .Y(_053_)
  );
  NOR _455_ (
    .A(selectorInterno),
    .B(data_out1[19]),
    .Y(_173_)
  );
  NAND _456_ (
    .A(selectorInterno),
    .B(_082_),
    .Y(_174_)
  );
  NAND _457_ (
    .A(reset_L),
    .B(_174_),
    .Y(_175_)
  );
  NOR _458_ (
    .A(_173_),
    .B(_175_),
    .Y(_052_)
  );
  NOR _459_ (
    .A(selectorInterno),
    .B(data_out1[18]),
    .Y(_176_)
  );
  NAND _460_ (
    .A(selectorInterno),
    .B(_083_),
    .Y(_177_)
  );
  NAND _461_ (
    .A(reset_L),
    .B(_177_),
    .Y(_178_)
  );
  NOR _462_ (
    .A(_176_),
    .B(_178_),
    .Y(_051_)
  );
  NOR _463_ (
    .A(selectorInterno),
    .B(data_out1[17]),
    .Y(_179_)
  );
  NAND _464_ (
    .A(selectorInterno),
    .B(_084_),
    .Y(_180_)
  );
  NAND _465_ (
    .A(reset_L),
    .B(_180_),
    .Y(_181_)
  );
  NOR _466_ (
    .A(_179_),
    .B(_181_),
    .Y(_050_)
  );
  NOR _467_ (
    .A(selectorInterno),
    .B(data_out1[16]),
    .Y(_182_)
  );
  NAND _468_ (
    .A(selectorInterno),
    .B(_085_),
    .Y(_183_)
  );
  NAND _469_ (
    .A(reset_L),
    .B(_183_),
    .Y(_184_)
  );
  NOR _470_ (
    .A(_182_),
    .B(_184_),
    .Y(_049_)
  );
  NOR _471_ (
    .A(selectorInterno),
    .B(data_out1[15]),
    .Y(_185_)
  );
  NAND _472_ (
    .A(selectorInterno),
    .B(_086_),
    .Y(_186_)
  );
  NAND _473_ (
    .A(reset_L),
    .B(_186_),
    .Y(_187_)
  );
  NOR _474_ (
    .A(_185_),
    .B(_187_),
    .Y(_048_)
  );
  NOR _475_ (
    .A(selectorInterno),
    .B(data_out1[14]),
    .Y(_188_)
  );
  NAND _476_ (
    .A(selectorInterno),
    .B(_087_),
    .Y(_189_)
  );
  NAND _477_ (
    .A(reset_L),
    .B(_189_),
    .Y(_190_)
  );
  NOR _478_ (
    .A(_188_),
    .B(_190_),
    .Y(_047_)
  );
  NOR _479_ (
    .A(selectorInterno),
    .B(data_out1[13]),
    .Y(_191_)
  );
  NAND _480_ (
    .A(selectorInterno),
    .B(_088_),
    .Y(_192_)
  );
  NAND _481_ (
    .A(reset_L),
    .B(_192_),
    .Y(_193_)
  );
  NOR _482_ (
    .A(_191_),
    .B(_193_),
    .Y(_046_)
  );
  NOR _483_ (
    .A(selectorInterno),
    .B(data_out1[12]),
    .Y(_194_)
  );
  NAND _484_ (
    .A(selectorInterno),
    .B(_089_),
    .Y(_195_)
  );
  NAND _485_ (
    .A(reset_L),
    .B(_195_),
    .Y(_196_)
  );
  NOR _486_ (
    .A(_194_),
    .B(_196_),
    .Y(_045_)
  );
  NOR _487_ (
    .A(selectorInterno),
    .B(data_out1[11]),
    .Y(_197_)
  );
  NAND _488_ (
    .A(selectorInterno),
    .B(_090_),
    .Y(_198_)
  );
  NAND _489_ (
    .A(reset_L),
    .B(_198_),
    .Y(_199_)
  );
  NOR _490_ (
    .A(_197_),
    .B(_199_),
    .Y(_044_)
  );
  NOR _491_ (
    .A(selectorInterno),
    .B(data_out1[10]),
    .Y(_200_)
  );
  NAND _492_ (
    .A(selectorInterno),
    .B(_091_),
    .Y(_201_)
  );
  NAND _493_ (
    .A(reset_L),
    .B(_201_),
    .Y(_202_)
  );
  NOR _494_ (
    .A(_200_),
    .B(_202_),
    .Y(_043_)
  );
  NOR _495_ (
    .A(selectorInterno),
    .B(data_out1[9]),
    .Y(_203_)
  );
  NAND _496_ (
    .A(selectorInterno),
    .B(_092_),
    .Y(_204_)
  );
  NAND _497_ (
    .A(reset_L),
    .B(_204_),
    .Y(_205_)
  );
  NOR _498_ (
    .A(_203_),
    .B(_205_),
    .Y(_042_)
  );
  NOR _499_ (
    .A(selectorInterno),
    .B(data_out1[8]),
    .Y(_206_)
  );
  NAND _500_ (
    .A(selectorInterno),
    .B(_093_),
    .Y(_207_)
  );
  NAND _501_ (
    .A(reset_L),
    .B(_207_),
    .Y(_208_)
  );
  NOR _502_ (
    .A(_206_),
    .B(_208_),
    .Y(_041_)
  );
  NOR _503_ (
    .A(selectorInterno),
    .B(data_out1[7]),
    .Y(_209_)
  );
  NAND _504_ (
    .A(selectorInterno),
    .B(_094_),
    .Y(_210_)
  );
  NAND _505_ (
    .A(reset_L),
    .B(_210_),
    .Y(_211_)
  );
  NOR _506_ (
    .A(_209_),
    .B(_211_),
    .Y(_040_)
  );
  NOR _507_ (
    .A(selectorInterno),
    .B(data_out1[6]),
    .Y(_212_)
  );
  NAND _508_ (
    .A(selectorInterno),
    .B(_095_),
    .Y(_213_)
  );
  NAND _509_ (
    .A(reset_L),
    .B(_213_),
    .Y(_214_)
  );
  NOR _510_ (
    .A(_212_),
    .B(_214_),
    .Y(_039_)
  );
  NOR _511_ (
    .A(selectorInterno),
    .B(data_out1[5]),
    .Y(_215_)
  );
  NAND _512_ (
    .A(selectorInterno),
    .B(_096_),
    .Y(_216_)
  );
  NAND _513_ (
    .A(reset_L),
    .B(_216_),
    .Y(_217_)
  );
  NOR _514_ (
    .A(_215_),
    .B(_217_),
    .Y(_038_)
  );
  NOR _515_ (
    .A(selectorInterno),
    .B(data_out1[4]),
    .Y(_218_)
  );
  NAND _516_ (
    .A(selectorInterno),
    .B(_097_),
    .Y(_219_)
  );
  NAND _517_ (
    .A(reset_L),
    .B(_219_),
    .Y(_220_)
  );
  NOR _518_ (
    .A(_218_),
    .B(_220_),
    .Y(_037_)
  );
  NOR _519_ (
    .A(selectorInterno),
    .B(data_out1[3]),
    .Y(_221_)
  );
  NAND _520_ (
    .A(selectorInterno),
    .B(_098_),
    .Y(_222_)
  );
  NAND _521_ (
    .A(reset_L),
    .B(_222_),
    .Y(_223_)
  );
  NOR _522_ (
    .A(_221_),
    .B(_223_),
    .Y(_036_)
  );
  NOR _523_ (
    .A(selectorInterno),
    .B(data_out1[2]),
    .Y(_224_)
  );
  NAND _524_ (
    .A(selectorInterno),
    .B(_099_),
    .Y(_225_)
  );
  NAND _525_ (
    .A(reset_L),
    .B(_225_),
    .Y(_226_)
  );
  NOR _526_ (
    .A(_224_),
    .B(_226_),
    .Y(_035_)
  );
  NOR _527_ (
    .A(selectorInterno),
    .B(data_out1[1]),
    .Y(_227_)
  );
  NAND _528_ (
    .A(selectorInterno),
    .B(_100_),
    .Y(_228_)
  );
  NAND _529_ (
    .A(reset_L),
    .B(_228_),
    .Y(_229_)
  );
  NOR _530_ (
    .A(_227_),
    .B(_229_),
    .Y(_034_)
  );
  NOR _531_ (
    .A(selectorInterno),
    .B(data_out1[0]),
    .Y(_230_)
  );
  NAND _532_ (
    .A(selectorInterno),
    .B(_101_),
    .Y(_231_)
  );
  NAND _533_ (
    .A(reset_L),
    .B(_231_),
    .Y(_232_)
  );
  NOR _534_ (
    .A(_230_),
    .B(_232_),
    .Y(_033_)
  );
  NOR _535_ (
    .A(selectorInterno),
    .B(data_in[31]),
    .Y(_233_)
  );
  NAND _536_ (
    .A(selectorInterno),
    .B(_102_),
    .Y(_234_)
  );
  NAND _537_ (
    .A(reset_L),
    .B(_234_),
    .Y(_235_)
  );
  NOR _538_ (
    .A(_233_),
    .B(_235_),
    .Y(_032_)
  );
  NOR _539_ (
    .A(selectorInterno),
    .B(data_in[30]),
    .Y(_236_)
  );
  NAND _540_ (
    .A(selectorInterno),
    .B(_103_),
    .Y(_237_)
  );
  NAND _541_ (
    .A(reset_L),
    .B(_237_),
    .Y(_238_)
  );
  NOR _542_ (
    .A(_236_),
    .B(_238_),
    .Y(_031_)
  );
  NOR _543_ (
    .A(selectorInterno),
    .B(data_in[29]),
    .Y(_239_)
  );
  NAND _544_ (
    .A(selectorInterno),
    .B(_104_),
    .Y(_240_)
  );
  NAND _545_ (
    .A(reset_L),
    .B(_240_),
    .Y(_241_)
  );
  NOR _546_ (
    .A(_239_),
    .B(_241_),
    .Y(_030_)
  );
  NOR _547_ (
    .A(selectorInterno),
    .B(data_in[28]),
    .Y(_242_)
  );
  NAND _548_ (
    .A(selectorInterno),
    .B(_105_),
    .Y(_243_)
  );
  NAND _549_ (
    .A(reset_L),
    .B(_243_),
    .Y(_244_)
  );
  NOR _550_ (
    .A(_242_),
    .B(_244_),
    .Y(_029_)
  );
  NOR _551_ (
    .A(selectorInterno),
    .B(data_in[27]),
    .Y(_245_)
  );
  NAND _552_ (
    .A(selectorInterno),
    .B(_106_),
    .Y(_246_)
  );
  NAND _553_ (
    .A(reset_L),
    .B(_246_),
    .Y(_247_)
  );
  NOR _554_ (
    .A(_245_),
    .B(_247_),
    .Y(_028_)
  );
  NOR _555_ (
    .A(selectorInterno),
    .B(data_in[26]),
    .Y(_248_)
  );
  NAND _556_ (
    .A(selectorInterno),
    .B(_107_),
    .Y(_249_)
  );
  NAND _557_ (
    .A(reset_L),
    .B(_249_),
    .Y(_250_)
  );
  NOR _558_ (
    .A(_248_),
    .B(_250_),
    .Y(_027_)
  );
  NOR _559_ (
    .A(selectorInterno),
    .B(data_in[25]),
    .Y(_251_)
  );
  NAND _560_ (
    .A(selectorInterno),
    .B(_108_),
    .Y(_252_)
  );
  NAND _561_ (
    .A(reset_L),
    .B(_252_),
    .Y(_253_)
  );
  NOR _562_ (
    .A(_251_),
    .B(_253_),
    .Y(_026_)
  );
  NOR _563_ (
    .A(selectorInterno),
    .B(data_in[24]),
    .Y(_254_)
  );
  NAND _564_ (
    .A(selectorInterno),
    .B(_109_),
    .Y(_255_)
  );
  NAND _565_ (
    .A(reset_L),
    .B(_255_),
    .Y(_256_)
  );
  NOR _566_ (
    .A(_254_),
    .B(_256_),
    .Y(_025_)
  );
  NOR _567_ (
    .A(selectorInterno),
    .B(data_in[23]),
    .Y(_257_)
  );
  NAND _568_ (
    .A(selectorInterno),
    .B(_110_),
    .Y(_258_)
  );
  NAND _569_ (
    .A(reset_L),
    .B(_258_),
    .Y(_259_)
  );
  NOR _570_ (
    .A(_257_),
    .B(_259_),
    .Y(_024_)
  );
  NOR _571_ (
    .A(selectorInterno),
    .B(data_in[22]),
    .Y(_260_)
  );
  NAND _572_ (
    .A(selectorInterno),
    .B(_111_),
    .Y(_261_)
  );
  NAND _573_ (
    .A(reset_L),
    .B(_261_),
    .Y(_262_)
  );
  NOR _574_ (
    .A(_260_),
    .B(_262_),
    .Y(_023_)
  );
  NOR _575_ (
    .A(selectorInterno),
    .B(data_in[21]),
    .Y(_263_)
  );
  NAND _576_ (
    .A(selectorInterno),
    .B(_112_),
    .Y(_264_)
  );
  NAND _577_ (
    .A(reset_L),
    .B(_264_),
    .Y(_265_)
  );
  NOR _578_ (
    .A(_263_),
    .B(_265_),
    .Y(_022_)
  );
  NOR _579_ (
    .A(selectorInterno),
    .B(data_in[20]),
    .Y(_266_)
  );
  NAND _580_ (
    .A(selectorInterno),
    .B(_113_),
    .Y(_267_)
  );
  NAND _581_ (
    .A(reset_L),
    .B(_267_),
    .Y(_268_)
  );
  NOR _582_ (
    .A(_266_),
    .B(_268_),
    .Y(_021_)
  );
  NOR _583_ (
    .A(selectorInterno),
    .B(data_in[19]),
    .Y(_269_)
  );
  NAND _584_ (
    .A(selectorInterno),
    .B(_114_),
    .Y(_270_)
  );
  NAND _585_ (
    .A(reset_L),
    .B(_270_),
    .Y(_271_)
  );
  NOR _586_ (
    .A(_269_),
    .B(_271_),
    .Y(_020_)
  );
  NOR _587_ (
    .A(selectorInterno),
    .B(data_in[18]),
    .Y(_272_)
  );
  NAND _588_ (
    .A(selectorInterno),
    .B(_115_),
    .Y(_273_)
  );
  NAND _589_ (
    .A(reset_L),
    .B(_273_),
    .Y(_274_)
  );
  NOR _590_ (
    .A(_272_),
    .B(_274_),
    .Y(_019_)
  );
  NOR _591_ (
    .A(selectorInterno),
    .B(data_in[17]),
    .Y(_275_)
  );
  NAND _592_ (
    .A(selectorInterno),
    .B(_116_),
    .Y(_276_)
  );
  NAND _593_ (
    .A(reset_L),
    .B(_276_),
    .Y(_277_)
  );
  NOR _594_ (
    .A(_275_),
    .B(_277_),
    .Y(_018_)
  );
  NOR _595_ (
    .A(selectorInterno),
    .B(data_in[16]),
    .Y(_278_)
  );
  NAND _596_ (
    .A(selectorInterno),
    .B(_117_),
    .Y(_279_)
  );
  NAND _597_ (
    .A(reset_L),
    .B(_279_),
    .Y(_280_)
  );
  NOR _598_ (
    .A(_278_),
    .B(_280_),
    .Y(_017_)
  );
  NOR _599_ (
    .A(selectorInterno),
    .B(data_in[15]),
    .Y(_281_)
  );
  NAND _600_ (
    .A(selectorInterno),
    .B(_118_),
    .Y(_282_)
  );
  NAND _601_ (
    .A(reset_L),
    .B(_282_),
    .Y(_283_)
  );
  NOR _602_ (
    .A(_281_),
    .B(_283_),
    .Y(_016_)
  );
  NOR _603_ (
    .A(selectorInterno),
    .B(data_in[14]),
    .Y(_284_)
  );
  NAND _604_ (
    .A(selectorInterno),
    .B(_119_),
    .Y(_285_)
  );
  NAND _605_ (
    .A(reset_L),
    .B(_285_),
    .Y(_286_)
  );
  NOR _606_ (
    .A(_284_),
    .B(_286_),
    .Y(_015_)
  );
  NOR _607_ (
    .A(selectorInterno),
    .B(data_in[13]),
    .Y(_287_)
  );
  NAND _608_ (
    .A(selectorInterno),
    .B(_120_),
    .Y(_288_)
  );
  NAND _609_ (
    .A(reset_L),
    .B(_288_),
    .Y(_289_)
  );
  NOR _610_ (
    .A(_287_),
    .B(_289_),
    .Y(_014_)
  );
  NOR _611_ (
    .A(selectorInterno),
    .B(data_in[12]),
    .Y(_290_)
  );
  NAND _612_ (
    .A(selectorInterno),
    .B(_121_),
    .Y(_291_)
  );
  NAND _613_ (
    .A(reset_L),
    .B(_291_),
    .Y(_292_)
  );
  NOR _614_ (
    .A(_290_),
    .B(_292_),
    .Y(_013_)
  );
  NOR _615_ (
    .A(selectorInterno),
    .B(data_in[11]),
    .Y(_293_)
  );
  NAND _616_ (
    .A(selectorInterno),
    .B(_122_),
    .Y(_294_)
  );
  NAND _617_ (
    .A(reset_L),
    .B(_294_),
    .Y(_295_)
  );
  NOR _618_ (
    .A(_293_),
    .B(_295_),
    .Y(_012_)
  );
  NOR _619_ (
    .A(selectorInterno),
    .B(data_in[10]),
    .Y(_296_)
  );
  NAND _620_ (
    .A(selectorInterno),
    .B(_123_),
    .Y(_297_)
  );
  NAND _621_ (
    .A(reset_L),
    .B(_297_),
    .Y(_298_)
  );
  NOR _622_ (
    .A(_296_),
    .B(_298_),
    .Y(_011_)
  );
  NOR _623_ (
    .A(selectorInterno),
    .B(data_in[9]),
    .Y(_299_)
  );
  NAND _624_ (
    .A(selectorInterno),
    .B(_124_),
    .Y(_300_)
  );
  NAND _625_ (
    .A(reset_L),
    .B(_300_),
    .Y(_301_)
  );
  NOR _626_ (
    .A(_299_),
    .B(_301_),
    .Y(_010_)
  );
  NOR _627_ (
    .A(selectorInterno),
    .B(data_in[8]),
    .Y(_302_)
  );
  NAND _628_ (
    .A(selectorInterno),
    .B(_125_),
    .Y(_303_)
  );
  NAND _629_ (
    .A(reset_L),
    .B(_303_),
    .Y(_304_)
  );
  NOR _630_ (
    .A(_302_),
    .B(_304_),
    .Y(_009_)
  );
  NOR _631_ (
    .A(selectorInterno),
    .B(data_in[7]),
    .Y(_305_)
  );
  NAND _632_ (
    .A(selectorInterno),
    .B(_126_),
    .Y(_306_)
  );
  NAND _633_ (
    .A(reset_L),
    .B(_306_),
    .Y(_307_)
  );
  NOR _634_ (
    .A(_305_),
    .B(_307_),
    .Y(_008_)
  );
  NOR _635_ (
    .A(selectorInterno),
    .B(data_in[6]),
    .Y(_308_)
  );
  NAND _636_ (
    .A(selectorInterno),
    .B(_127_),
    .Y(_309_)
  );
  NAND _637_ (
    .A(reset_L),
    .B(_309_),
    .Y(_310_)
  );
  NOR _638_ (
    .A(_308_),
    .B(_310_),
    .Y(_007_)
  );
  NOR _639_ (
    .A(selectorInterno),
    .B(data_in[5]),
    .Y(_311_)
  );
  NAND _640_ (
    .A(selectorInterno),
    .B(_128_),
    .Y(_312_)
  );
  NAND _641_ (
    .A(reset_L),
    .B(_312_),
    .Y(_313_)
  );
  NOR _642_ (
    .A(_311_),
    .B(_313_),
    .Y(_006_)
  );
  NOR _643_ (
    .A(selectorInterno),
    .B(data_in[4]),
    .Y(_314_)
  );
  NAND _644_ (
    .A(selectorInterno),
    .B(_129_),
    .Y(_315_)
  );
  NAND _645_ (
    .A(reset_L),
    .B(_315_),
    .Y(_316_)
  );
  NOR _646_ (
    .A(_314_),
    .B(_316_),
    .Y(_005_)
  );
  NOR _647_ (
    .A(selectorInterno),
    .B(data_in[3]),
    .Y(_317_)
  );
  NAND _648_ (
    .A(selectorInterno),
    .B(_130_),
    .Y(_318_)
  );
  NAND _649_ (
    .A(reset_L),
    .B(_318_),
    .Y(_319_)
  );
  NOR _650_ (
    .A(_317_),
    .B(_319_),
    .Y(_004_)
  );
  NOR _651_ (
    .A(selectorInterno),
    .B(data_in[2]),
    .Y(_320_)
  );
  NAND _652_ (
    .A(selectorInterno),
    .B(_131_),
    .Y(_321_)
  );
  NAND _653_ (
    .A(reset_L),
    .B(_321_),
    .Y(_322_)
  );
  NOR _654_ (
    .A(_320_),
    .B(_322_),
    .Y(_003_)
  );
  NOR _655_ (
    .A(selectorInterno),
    .B(data_in[1]),
    .Y(_323_)
  );
  NAND _656_ (
    .A(selectorInterno),
    .B(_132_),
    .Y(_324_)
  );
  NAND _657_ (
    .A(reset_L),
    .B(_324_),
    .Y(_325_)
  );
  NOR _658_ (
    .A(_323_),
    .B(_325_),
    .Y(_002_)
  );
  NOR _659_ (
    .A(selectorInterno),
    .B(data_in[0]),
    .Y(_326_)
  );
  NAND _660_ (
    .A(selectorInterno),
    .B(_133_),
    .Y(_327_)
  );
  NAND _661_ (
    .A(reset_L),
    .B(_327_),
    .Y(_328_)
  );
  NOR _662_ (
    .A(_326_),
    .B(_328_),
    .Y(_001_)
  );
  NOR _663_ (
    .A(valid_out_1),
    .B(valid_in),
    .Y(_329_)
  );
  NOR _664_ (
    .A(_068_),
    .B(_329_),
    .Y(_330_)
  );
  NAND _665_ (
    .A(_069_),
    .B(_134_),
    .Y(_331_)
  );
  NAND _666_ (
    .A(reset_L),
    .B(_331_),
    .Y(_332_)
  );
  NOR _667_ (
    .A(_330_),
    .B(_332_),
    .Y(_000_)
  );
  NOR _668_ (
    .A(valid_out_1),
    .B(selectorInterno),
    .Y(_333_)
  );
  NAND _669_ (
    .A(_067_),
    .B(selectorInterno),
    .Y(_334_)
  );
  NAND _670_ (
    .A(reset_L),
    .B(_334_),
    .Y(_335_)
  );
  NOR _671_ (
    .A(_333_),
    .B(_335_),
    .Y(_066_)
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _672_ (
    .C(clk_2f),
    .D(_000_),
    .Q(selectorInterno)
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _673_ (
    .C(clk_2f),
    .D(_001_),
    .Q(data_out0[0])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _674_ (
    .C(clk_2f),
    .D(_002_),
    .Q(data_out0[1])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _675_ (
    .C(clk_2f),
    .D(_003_),
    .Q(data_out0[2])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _676_ (
    .C(clk_2f),
    .D(_004_),
    .Q(data_out0[3])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _677_ (
    .C(clk_2f),
    .D(_005_),
    .Q(data_out0[4])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _678_ (
    .C(clk_2f),
    .D(_006_),
    .Q(data_out0[5])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _679_ (
    .C(clk_2f),
    .D(_007_),
    .Q(data_out0[6])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _680_ (
    .C(clk_2f),
    .D(_008_),
    .Q(data_out0[7])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _681_ (
    .C(clk_2f),
    .D(_009_),
    .Q(data_out0[8])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _682_ (
    .C(clk_2f),
    .D(_010_),
    .Q(data_out0[9])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _683_ (
    .C(clk_2f),
    .D(_011_),
    .Q(data_out0[10])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _684_ (
    .C(clk_2f),
    .D(_012_),
    .Q(data_out0[11])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _685_ (
    .C(clk_2f),
    .D(_013_),
    .Q(data_out0[12])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _686_ (
    .C(clk_2f),
    .D(_014_),
    .Q(data_out0[13])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _687_ (
    .C(clk_2f),
    .D(_015_),
    .Q(data_out0[14])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _688_ (
    .C(clk_2f),
    .D(_016_),
    .Q(data_out0[15])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _689_ (
    .C(clk_2f),
    .D(_017_),
    .Q(data_out0[16])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _690_ (
    .C(clk_2f),
    .D(_018_),
    .Q(data_out0[17])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _691_ (
    .C(clk_2f),
    .D(_019_),
    .Q(data_out0[18])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _692_ (
    .C(clk_2f),
    .D(_020_),
    .Q(data_out0[19])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _693_ (
    .C(clk_2f),
    .D(_021_),
    .Q(data_out0[20])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _694_ (
    .C(clk_2f),
    .D(_022_),
    .Q(data_out0[21])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _695_ (
    .C(clk_2f),
    .D(_023_),
    .Q(data_out0[22])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _696_ (
    .C(clk_2f),
    .D(_024_),
    .Q(data_out0[23])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _697_ (
    .C(clk_2f),
    .D(_025_),
    .Q(data_out0[24])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _698_ (
    .C(clk_2f),
    .D(_026_),
    .Q(data_out0[25])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _699_ (
    .C(clk_2f),
    .D(_027_),
    .Q(data_out0[26])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _700_ (
    .C(clk_2f),
    .D(_028_),
    .Q(data_out0[27])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _701_ (
    .C(clk_2f),
    .D(_029_),
    .Q(data_out0[28])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _702_ (
    .C(clk_2f),
    .D(_030_),
    .Q(data_out0[29])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _703_ (
    .C(clk_2f),
    .D(_031_),
    .Q(data_out0[30])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _704_ (
    .C(clk_2f),
    .D(_032_),
    .Q(data_out0[31])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _705_ (
    .C(clk_2f),
    .D(_033_),
    .Q(data_out1[0])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _706_ (
    .C(clk_2f),
    .D(_034_),
    .Q(data_out1[1])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _707_ (
    .C(clk_2f),
    .D(_035_),
    .Q(data_out1[2])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _708_ (
    .C(clk_2f),
    .D(_036_),
    .Q(data_out1[3])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _709_ (
    .C(clk_2f),
    .D(_037_),
    .Q(data_out1[4])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _710_ (
    .C(clk_2f),
    .D(_038_),
    .Q(data_out1[5])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _711_ (
    .C(clk_2f),
    .D(_039_),
    .Q(data_out1[6])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _712_ (
    .C(clk_2f),
    .D(_040_),
    .Q(data_out1[7])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _713_ (
    .C(clk_2f),
    .D(_041_),
    .Q(data_out1[8])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _714_ (
    .C(clk_2f),
    .D(_042_),
    .Q(data_out1[9])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _715_ (
    .C(clk_2f),
    .D(_043_),
    .Q(data_out1[10])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _716_ (
    .C(clk_2f),
    .D(_044_),
    .Q(data_out1[11])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _717_ (
    .C(clk_2f),
    .D(_045_),
    .Q(data_out1[12])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _718_ (
    .C(clk_2f),
    .D(_046_),
    .Q(data_out1[13])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _719_ (
    .C(clk_2f),
    .D(_047_),
    .Q(data_out1[14])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _720_ (
    .C(clk_2f),
    .D(_048_),
    .Q(data_out1[15])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _721_ (
    .C(clk_2f),
    .D(_049_),
    .Q(data_out1[16])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _722_ (
    .C(clk_2f),
    .D(_050_),
    .Q(data_out1[17])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _723_ (
    .C(clk_2f),
    .D(_051_),
    .Q(data_out1[18])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _724_ (
    .C(clk_2f),
    .D(_052_),
    .Q(data_out1[19])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _725_ (
    .C(clk_2f),
    .D(_053_),
    .Q(data_out1[20])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _726_ (
    .C(clk_2f),
    .D(_054_),
    .Q(data_out1[21])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _727_ (
    .C(clk_2f),
    .D(_055_),
    .Q(data_out1[22])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _728_ (
    .C(clk_2f),
    .D(_056_),
    .Q(data_out1[23])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _729_ (
    .C(clk_2f),
    .D(_057_),
    .Q(data_out1[24])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _730_ (
    .C(clk_2f),
    .D(_058_),
    .Q(data_out1[25])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _731_ (
    .C(clk_2f),
    .D(_059_),
    .Q(data_out1[26])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _732_ (
    .C(clk_2f),
    .D(_060_),
    .Q(data_out1[27])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _733_ (
    .C(clk_2f),
    .D(_061_),
    .Q(data_out1[28])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _734_ (
    .C(clk_2f),
    .D(_062_),
    .Q(data_out1[29])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _735_ (
    .C(clk_2f),
    .D(_063_),
    .Q(data_out1[30])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _736_ (
    .C(clk_2f),
    .D(_064_),
    .Q(data_out1[31])
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _737_ (
    .C(clk_2f),
    .D(_065_),
    .Q(valid_out_0)
  );
  (* src = "demux_striping_synth.v:13.5-47.8" *)
  DFF _738_ (
    .C(clk_2f),
    .D(_066_),
    .Q(valid_out_1)
  );
endmodule

(* src = "module_Flops_synth.v:1.1-28.10" *)
module module_Flops_synth(clk_2f, reset_L, valid_in, data_in, valid_out_Flops, data_out_Flops);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  (* src = "module_Flops_synth.v:2.13-2.19" *)
  input clk_2f;
  (* src = "module_Flops_synth.v:5.18-5.25" *)
  input [31:0] data_in;
  (* src = "module_Flops_synth.v:7.23-7.37" *)
  output [31:0] data_out_Flops;
  (* src = "module_Flops_synth.v:3.13-3.20" *)
  input reset_L;
  (* src = "module_Flops_synth.v:4.13-4.21" *)
  input valid_in;
  (* src = "module_Flops_synth.v:6.17-6.32" *)
  output valid_out_Flops;
  NAND _065_ (
    .A(data_in[30]),
    .B(reset_L),
    .Y(_049_)
  );
  NOT _066_ (
    .A(_049_),
    .Y(_030_)
  );
  NAND _067_ (
    .A(reset_L),
    .B(data_in[29]),
    .Y(_050_)
  );
  NOT _068_ (
    .A(_050_),
    .Y(_029_)
  );
  NAND _069_ (
    .A(reset_L),
    .B(data_in[28]),
    .Y(_051_)
  );
  NOT _070_ (
    .A(_051_),
    .Y(_028_)
  );
  NAND _071_ (
    .A(reset_L),
    .B(data_in[27]),
    .Y(_052_)
  );
  NOT _072_ (
    .A(_052_),
    .Y(_027_)
  );
  NAND _073_ (
    .A(reset_L),
    .B(data_in[26]),
    .Y(_053_)
  );
  NOT _074_ (
    .A(_053_),
    .Y(_026_)
  );
  NAND _075_ (
    .A(reset_L),
    .B(data_in[25]),
    .Y(_054_)
  );
  NOT _076_ (
    .A(_054_),
    .Y(_025_)
  );
  NAND _077_ (
    .A(reset_L),
    .B(data_in[24]),
    .Y(_055_)
  );
  NOT _078_ (
    .A(_055_),
    .Y(_024_)
  );
  NAND _079_ (
    .A(reset_L),
    .B(data_in[23]),
    .Y(_056_)
  );
  NOT _080_ (
    .A(_056_),
    .Y(_023_)
  );
  NAND _081_ (
    .A(reset_L),
    .B(data_in[22]),
    .Y(_057_)
  );
  NOT _082_ (
    .A(_057_),
    .Y(_022_)
  );
  NAND _083_ (
    .A(reset_L),
    .B(data_in[21]),
    .Y(_058_)
  );
  NOT _084_ (
    .A(_058_),
    .Y(_021_)
  );
  NAND _085_ (
    .A(reset_L),
    .B(data_in[20]),
    .Y(_059_)
  );
  NOT _086_ (
    .A(_059_),
    .Y(_020_)
  );
  NAND _087_ (
    .A(reset_L),
    .B(data_in[19]),
    .Y(_060_)
  );
  NOT _088_ (
    .A(_060_),
    .Y(_019_)
  );
  NAND _089_ (
    .A(reset_L),
    .B(data_in[18]),
    .Y(_061_)
  );
  NOT _090_ (
    .A(_061_),
    .Y(_018_)
  );
  NAND _091_ (
    .A(reset_L),
    .B(data_in[17]),
    .Y(_062_)
  );
  NOT _092_ (
    .A(_062_),
    .Y(_017_)
  );
  NAND _093_ (
    .A(reset_L),
    .B(data_in[16]),
    .Y(_063_)
  );
  NOT _094_ (
    .A(_063_),
    .Y(_016_)
  );
  NAND _095_ (
    .A(reset_L),
    .B(data_in[15]),
    .Y(_064_)
  );
  NOT _096_ (
    .A(_064_),
    .Y(_015_)
  );
  NAND _097_ (
    .A(reset_L),
    .B(data_in[14]),
    .Y(_032_)
  );
  NOT _098_ (
    .A(_032_),
    .Y(_014_)
  );
  NAND _099_ (
    .A(reset_L),
    .B(data_in[13]),
    .Y(_033_)
  );
  NOT _100_ (
    .A(_033_),
    .Y(_013_)
  );
  NAND _101_ (
    .A(reset_L),
    .B(data_in[12]),
    .Y(_034_)
  );
  NOT _102_ (
    .A(_034_),
    .Y(_012_)
  );
  NAND _103_ (
    .A(reset_L),
    .B(data_in[11]),
    .Y(_035_)
  );
  NOT _104_ (
    .A(_035_),
    .Y(_011_)
  );
  NAND _105_ (
    .A(reset_L),
    .B(data_in[10]),
    .Y(_036_)
  );
  NOT _106_ (
    .A(_036_),
    .Y(_010_)
  );
  NAND _107_ (
    .A(reset_L),
    .B(data_in[9]),
    .Y(_037_)
  );
  NOT _108_ (
    .A(_037_),
    .Y(_009_)
  );
  NAND _109_ (
    .A(reset_L),
    .B(data_in[8]),
    .Y(_038_)
  );
  NOT _110_ (
    .A(_038_),
    .Y(_008_)
  );
  NAND _111_ (
    .A(reset_L),
    .B(data_in[7]),
    .Y(_039_)
  );
  NOT _112_ (
    .A(_039_),
    .Y(_007_)
  );
  NAND _113_ (
    .A(reset_L),
    .B(data_in[6]),
    .Y(_040_)
  );
  NOT _114_ (
    .A(_040_),
    .Y(_006_)
  );
  NAND _115_ (
    .A(reset_L),
    .B(data_in[5]),
    .Y(_041_)
  );
  NOT _116_ (
    .A(_041_),
    .Y(_005_)
  );
  NAND _117_ (
    .A(reset_L),
    .B(data_in[4]),
    .Y(_042_)
  );
  NOT _118_ (
    .A(_042_),
    .Y(_004_)
  );
  NAND _119_ (
    .A(reset_L),
    .B(data_in[3]),
    .Y(_043_)
  );
  NOT _120_ (
    .A(_043_),
    .Y(_003_)
  );
  NAND _121_ (
    .A(reset_L),
    .B(data_in[2]),
    .Y(_044_)
  );
  NOT _122_ (
    .A(_044_),
    .Y(_002_)
  );
  NAND _123_ (
    .A(reset_L),
    .B(data_in[1]),
    .Y(_045_)
  );
  NOT _124_ (
    .A(_045_),
    .Y(_001_)
  );
  NAND _125_ (
    .A(reset_L),
    .B(data_in[0]),
    .Y(_046_)
  );
  NOT _126_ (
    .A(_046_),
    .Y(_000_)
  );
  NAND _127_ (
    .A(reset_L),
    .B(valid_in),
    .Y(_047_)
  );
  NOT _128_ (
    .A(_047_),
    .Y(valid_out_Flops)
  );
  NAND _129_ (
    .A(reset_L),
    .B(data_in[31]),
    .Y(_048_)
  );
  NOT _130_ (
    .A(_048_),
    .Y(_031_)
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _131_ (
    .C(clk_2f),
    .D(_000_),
    .Q(data_out_Flops[0])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _132_ (
    .C(clk_2f),
    .D(_001_),
    .Q(data_out_Flops[1])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _133_ (
    .C(clk_2f),
    .D(_002_),
    .Q(data_out_Flops[2])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _134_ (
    .C(clk_2f),
    .D(_003_),
    .Q(data_out_Flops[3])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _135_ (
    .C(clk_2f),
    .D(_004_),
    .Q(data_out_Flops[4])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _136_ (
    .C(clk_2f),
    .D(_005_),
    .Q(data_out_Flops[5])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _137_ (
    .C(clk_2f),
    .D(_006_),
    .Q(data_out_Flops[6])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _138_ (
    .C(clk_2f),
    .D(_007_),
    .Q(data_out_Flops[7])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _139_ (
    .C(clk_2f),
    .D(_008_),
    .Q(data_out_Flops[8])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _140_ (
    .C(clk_2f),
    .D(_009_),
    .Q(data_out_Flops[9])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _141_ (
    .C(clk_2f),
    .D(_010_),
    .Q(data_out_Flops[10])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _142_ (
    .C(clk_2f),
    .D(_011_),
    .Q(data_out_Flops[11])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _143_ (
    .C(clk_2f),
    .D(_012_),
    .Q(data_out_Flops[12])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _144_ (
    .C(clk_2f),
    .D(_013_),
    .Q(data_out_Flops[13])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _145_ (
    .C(clk_2f),
    .D(_014_),
    .Q(data_out_Flops[14])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _146_ (
    .C(clk_2f),
    .D(_015_),
    .Q(data_out_Flops[15])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _147_ (
    .C(clk_2f),
    .D(_016_),
    .Q(data_out_Flops[16])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _148_ (
    .C(clk_2f),
    .D(_017_),
    .Q(data_out_Flops[17])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _149_ (
    .C(clk_2f),
    .D(_018_),
    .Q(data_out_Flops[18])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _150_ (
    .C(clk_2f),
    .D(_019_),
    .Q(data_out_Flops[19])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _151_ (
    .C(clk_2f),
    .D(_020_),
    .Q(data_out_Flops[20])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _152_ (
    .C(clk_2f),
    .D(_021_),
    .Q(data_out_Flops[21])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _153_ (
    .C(clk_2f),
    .D(_022_),
    .Q(data_out_Flops[22])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _154_ (
    .C(clk_2f),
    .D(_023_),
    .Q(data_out_Flops[23])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _155_ (
    .C(clk_2f),
    .D(_024_),
    .Q(data_out_Flops[24])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _156_ (
    .C(clk_2f),
    .D(_025_),
    .Q(data_out_Flops[25])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _157_ (
    .C(clk_2f),
    .D(_026_),
    .Q(data_out_Flops[26])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _158_ (
    .C(clk_2f),
    .D(_027_),
    .Q(data_out_Flops[27])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _159_ (
    .C(clk_2f),
    .D(_028_),
    .Q(data_out_Flops[28])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _160_ (
    .C(clk_2f),
    .D(_029_),
    .Q(data_out_Flops[29])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _161_ (
    .C(clk_2f),
    .D(_030_),
    .Q(data_out_Flops[30])
  );
  (* src = "module_Flops_synth.v:19.5-26.8" *)
  DFF _162_ (
    .C(clk_2f),
    .D(_031_),
    .Q(data_out_Flops[31])
  );
endmodule

(* src = "module_PS_synth.v:1.1-51.10" *)
module module_PS_synth(clk_32f, reset_L, valid_in_PS, data_in_PS, data_out_PS);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  (* src = "module_PS_synth.v:2.13-2.20" *)
  input clk_32f;
  (* src = "module_PS_synth.v:10.15-10.22" *)
  wire [2:0] counter;
  (* src = "module_PS_synth.v:8.15-8.26" *)
  (* unused_bits = "7" *)
  wire [7:0] data_in1_PS;
  (* src = "module_PS_synth.v:9.15-9.26" *)
  wire [6:0] data_in2_PS;
  (* src = "module_PS_synth.v:5.17-5.27" *)
  input [7:0] data_in_PS;
  (* src = "module_PS_synth.v:6.17-6.28" *)
  output data_out_PS;
  (* src = "module_PS_synth.v:3.13-3.20" *)
  input reset_L;
  (* src = "module_PS_synth.v:4.13-4.24" *)
  input valid_in_PS;
  NOT _065_ (
    .A(data_in1_PS[0]),
    .Y(_011_)
  );
  NOT _066_ (
    .A(reset_L),
    .Y(_012_)
  );
  NOT _067_ (
    .A(data_in1_PS[1]),
    .Y(_013_)
  );
  NOT _068_ (
    .A(counter[2]),
    .Y(_014_)
  );
  NOT _069_ (
    .A(valid_in_PS),
    .Y(_015_)
  );
  NOT _070_ (
    .A(data_in_PS[1]),
    .Y(_016_)
  );
  NOT _071_ (
    .A(data_in_PS[6]),
    .Y(_017_)
  );
  NOR _072_ (
    .A(data_in1_PS[0]),
    .B(data_in1_PS[4]),
    .Y(_018_)
  );
  NOR _073_ (
    .A(data_in1_PS[5]),
    .B(data_in1_PS[3]),
    .Y(_019_)
  );
  NAND _074_ (
    .A(_013_),
    .B(_019_),
    .Y(_020_)
  );
  NOR _075_ (
    .A(data_in1_PS[6]),
    .B(data_in1_PS[2]),
    .Y(_021_)
  );
  NAND _076_ (
    .A(_018_),
    .B(_021_),
    .Y(_022_)
  );
  NOR _077_ (
    .A(_020_),
    .B(_022_),
    .Y(_023_)
  );
  NOT _078_ (
    .A(_023_),
    .Y(_024_)
  );
  NAND _079_ (
    .A(counter[1]),
    .B(counter[0]),
    .Y(_025_)
  );
  NOT _080_ (
    .A(_025_),
    .Y(_026_)
  );
  NOR _081_ (
    .A(_014_),
    .B(_026_),
    .Y(_027_)
  );
  NAND _082_ (
    .A(counter[2]),
    .B(_025_),
    .Y(_028_)
  );
  NOR _083_ (
    .A(counter[1]),
    .B(counter[0]),
    .Y(_029_)
  );
  NOR _084_ (
    .A(counter[2]),
    .B(_029_),
    .Y(_030_)
  );
  NOT _085_ (
    .A(_030_),
    .Y(_031_)
  );
  NOR _086_ (
    .A(_027_),
    .B(_030_),
    .Y(_032_)
  );
  NAND _087_ (
    .A(_028_),
    .B(_031_),
    .Y(_033_)
  );
  NOR _088_ (
    .A(_024_),
    .B(_033_),
    .Y(_034_)
  );
  NAND _089_ (
    .A(_023_),
    .B(_032_),
    .Y(_035_)
  );
  NAND _090_ (
    .A(valid_in_PS),
    .B(_034_),
    .Y(_036_)
  );
  NOR _091_ (
    .A(_017_),
    .B(_036_),
    .Y(_037_)
  );
  NOR _092_ (
    .A(data_in1_PS[5]),
    .B(_037_),
    .Y(_038_)
  );
  NOR _093_ (
    .A(_012_),
    .B(_038_),
    .Y(_009_)
  );
  NOR _094_ (
    .A(data_in_PS[5]),
    .B(_015_),
    .Y(_039_)
  );
  NOR _095_ (
    .A(_035_),
    .B(_039_),
    .Y(_040_)
  );
  NOR _096_ (
    .A(data_in1_PS[4]),
    .B(_040_),
    .Y(_041_)
  );
  NOR _097_ (
    .A(_012_),
    .B(_041_),
    .Y(_008_)
  );
  NOR _098_ (
    .A(_015_),
    .B(data_in_PS[4]),
    .Y(_042_)
  );
  NOR _099_ (
    .A(_035_),
    .B(_042_),
    .Y(_043_)
  );
  NOR _100_ (
    .A(data_in1_PS[3]),
    .B(_043_),
    .Y(_044_)
  );
  NOR _101_ (
    .A(_012_),
    .B(_044_),
    .Y(_007_)
  );
  NOR _102_ (
    .A(_015_),
    .B(data_in_PS[3]),
    .Y(_045_)
  );
  NOR _103_ (
    .A(_035_),
    .B(_045_),
    .Y(_046_)
  );
  NOR _104_ (
    .A(data_in1_PS[2]),
    .B(_046_),
    .Y(_047_)
  );
  NOR _105_ (
    .A(_012_),
    .B(_047_),
    .Y(_006_)
  );
  NOR _106_ (
    .A(_015_),
    .B(data_in_PS[2]),
    .Y(_048_)
  );
  NOR _107_ (
    .A(_035_),
    .B(_048_),
    .Y(_049_)
  );
  NOR _108_ (
    .A(data_in1_PS[1]),
    .B(_049_),
    .Y(_050_)
  );
  NOR _109_ (
    .A(_012_),
    .B(_050_),
    .Y(_005_)
  );
  NOR _110_ (
    .A(_016_),
    .B(_036_),
    .Y(_051_)
  );
  NOR _111_ (
    .A(data_in1_PS[0]),
    .B(_051_),
    .Y(_052_)
  );
  NOR _112_ (
    .A(_012_),
    .B(_052_),
    .Y(_004_)
  );
  NOR _113_ (
    .A(_015_),
    .B(data_in_PS[7]),
    .Y(_053_)
  );
  NOR _114_ (
    .A(_035_),
    .B(_053_),
    .Y(_054_)
  );
  NOR _115_ (
    .A(data_in1_PS[6]),
    .B(_054_),
    .Y(_055_)
  );
  NOR _116_ (
    .A(_012_),
    .B(_055_),
    .Y(_003_)
  );
  NOR _117_ (
    .A(counter[2]),
    .B(_025_),
    .Y(_056_)
  );
  NOR _118_ (
    .A(_027_),
    .B(_056_),
    .Y(_057_)
  );
  NOR _119_ (
    .A(_012_),
    .B(_057_),
    .Y(_002_)
  );
  NAND _120_ (
    .A(reset_L),
    .B(_025_),
    .Y(_058_)
  );
  NOR _121_ (
    .A(_029_),
    .B(_058_),
    .Y(_001_)
  );
  NAND _122_ (
    .A(reset_L),
    .B(_035_),
    .Y(_059_)
  );
  NOR _123_ (
    .A(counter[0]),
    .B(_059_),
    .Y(_000_)
  );
  NAND _124_ (
    .A(valid_in_PS),
    .B(data_in_PS[0]),
    .Y(_060_)
  );
  NOR _125_ (
    .A(_033_),
    .B(_060_),
    .Y(_061_)
  );
  NOR _126_ (
    .A(_011_),
    .B(_032_),
    .Y(_062_)
  );
  NOR _127_ (
    .A(_061_),
    .B(_062_),
    .Y(_063_)
  );
  NAND _128_ (
    .A(reset_L),
    .B(_023_),
    .Y(_064_)
  );
  NOR _129_ (
    .A(_063_),
    .B(_064_),
    .Y(_010_)
  );
  (* src = "module_PS_synth.v:12.5-49.6" *)
  DFF _130_ (
    .C(clk_32f),
    .D(_000_),
    .Q(counter[0])
  );
  (* src = "module_PS_synth.v:12.5-49.6" *)
  DFF _131_ (
    .C(clk_32f),
    .D(_001_),
    .Q(counter[1])
  );
  (* src = "module_PS_synth.v:12.5-49.6" *)
  DFF _132_ (
    .C(clk_32f),
    .D(_002_),
    .Q(counter[2])
  );
  (* src = "module_PS_synth.v:12.5-49.6" *)
  DFF _133_ (
    .C(clk_32f),
    .D(_003_),
    .Q(data_out_PS)
  );
  (* src = "module_PS_synth.v:12.5-49.6" *)
  DFF _134_ (
    .C(clk_32f),
    .D(_004_),
    .Q(data_in1_PS[1])
  );
  (* src = "module_PS_synth.v:12.5-49.6" *)
  DFF _135_ (
    .C(clk_32f),
    .D(_005_),
    .Q(data_in1_PS[2])
  );
  (* src = "module_PS_synth.v:12.5-49.6" *)
  DFF _136_ (
    .C(clk_32f),
    .D(_006_),
    .Q(data_in1_PS[3])
  );
  (* src = "module_PS_synth.v:12.5-49.6" *)
  DFF _137_ (
    .C(clk_32f),
    .D(_007_),
    .Q(data_in1_PS[4])
  );
  (* src = "module_PS_synth.v:12.5-49.6" *)
  DFF _138_ (
    .C(clk_32f),
    .D(_008_),
    .Q(data_in1_PS[5])
  );
  (* src = "module_PS_synth.v:12.5-49.6" *)
  DFF _139_ (
    .C(clk_32f),
    .D(_009_),
    .Q(data_in1_PS[6])
  );
  (* src = "module_PS_synth.v:12.5-49.6" *)
  DFF _140_ (
    .C(clk_32f),
    .D(_010_),
    .Q(data_in1_PS[0])
  );
  assign data_in2_PS = 7'h00;
endmodule

(* src = "module_Recirculacion_synth.v:1.1-24.10" *)
module module_Recirculacion_synth(active, valid_in_Recir, data_in_Recir, valid_out_Recir, data_out_Recir, data_out_Retorno);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  (* src = "module_Recirculacion_synth.v:2.13-2.19" *)
  input active;
  (* src = "module_Recirculacion_synth.v:4.18-4.31" *)
  input [31:0] data_in_Recir;
  (* src = "module_Recirculacion_synth.v:6.23-6.37" *)
  output [31:0] data_out_Recir;
  (* src = "module_Recirculacion_synth.v:7.23-7.39" *)
  output [31:0] data_out_Retorno;
  (* src = "module_Recirculacion_synth.v:3.13-3.27" *)
  input valid_in_Recir;
  (* src = "module_Recirculacion_synth.v:5.17-5.32" *)
  output valid_out_Recir;
  NOT _065_ (
    .A(data_in_Recir[0]),
    .Y(_000_)
  );
  NOT _066_ (
    .A(data_in_Recir[1]),
    .Y(_001_)
  );
  NOT _067_ (
    .A(data_in_Recir[2]),
    .Y(_002_)
  );
  NOT _068_ (
    .A(data_in_Recir[3]),
    .Y(_003_)
  );
  NOT _069_ (
    .A(data_in_Recir[4]),
    .Y(_004_)
  );
  NOT _070_ (
    .A(data_in_Recir[5]),
    .Y(_005_)
  );
  NOT _071_ (
    .A(data_in_Recir[6]),
    .Y(_006_)
  );
  NOT _072_ (
    .A(data_in_Recir[7]),
    .Y(_007_)
  );
  NOT _073_ (
    .A(data_in_Recir[8]),
    .Y(_008_)
  );
  NOT _074_ (
    .A(data_in_Recir[9]),
    .Y(_009_)
  );
  NOT _075_ (
    .A(data_in_Recir[10]),
    .Y(_010_)
  );
  NOT _076_ (
    .A(data_in_Recir[11]),
    .Y(_011_)
  );
  NOT _077_ (
    .A(data_in_Recir[12]),
    .Y(_012_)
  );
  NOT _078_ (
    .A(data_in_Recir[13]),
    .Y(_013_)
  );
  NOT _079_ (
    .A(data_in_Recir[14]),
    .Y(_014_)
  );
  NOT _080_ (
    .A(data_in_Recir[15]),
    .Y(_015_)
  );
  NOT _081_ (
    .A(data_in_Recir[16]),
    .Y(_016_)
  );
  NOT _082_ (
    .A(data_in_Recir[17]),
    .Y(_017_)
  );
  NOT _083_ (
    .A(data_in_Recir[18]),
    .Y(_018_)
  );
  NOT _084_ (
    .A(data_in_Recir[19]),
    .Y(_019_)
  );
  NOT _085_ (
    .A(data_in_Recir[20]),
    .Y(_020_)
  );
  NOT _086_ (
    .A(data_in_Recir[21]),
    .Y(_021_)
  );
  NOT _087_ (
    .A(data_in_Recir[22]),
    .Y(_022_)
  );
  NOT _088_ (
    .A(data_in_Recir[23]),
    .Y(_023_)
  );
  NOT _089_ (
    .A(data_in_Recir[24]),
    .Y(_024_)
  );
  NOT _090_ (
    .A(data_in_Recir[25]),
    .Y(_025_)
  );
  NOT _091_ (
    .A(data_in_Recir[26]),
    .Y(_026_)
  );
  NOT _092_ (
    .A(data_in_Recir[27]),
    .Y(_027_)
  );
  NOT _093_ (
    .A(data_in_Recir[28]),
    .Y(_028_)
  );
  NOT _094_ (
    .A(data_in_Recir[29]),
    .Y(_029_)
  );
  NOT _095_ (
    .A(data_in_Recir[30]),
    .Y(_030_)
  );
  NOT _096_ (
    .A(data_in_Recir[31]),
    .Y(_031_)
  );
  NAND _097_ (
    .A(valid_in_Recir),
    .B(active),
    .Y(_032_)
  );
  NOT _098_ (
    .A(_032_),
    .Y(valid_out_Recir)
  );
  NOR _099_ (
    .A(active),
    .B(_000_),
    .Y(data_out_Retorno[0])
  );
  NOR _100_ (
    .A(active),
    .B(_001_),
    .Y(data_out_Retorno[1])
  );
  NOR _101_ (
    .A(active),
    .B(_002_),
    .Y(data_out_Retorno[2])
  );
  NOR _102_ (
    .A(active),
    .B(_003_),
    .Y(data_out_Retorno[3])
  );
  NOR _103_ (
    .A(active),
    .B(_004_),
    .Y(data_out_Retorno[4])
  );
  NOR _104_ (
    .A(active),
    .B(_005_),
    .Y(data_out_Retorno[5])
  );
  NOR _105_ (
    .A(active),
    .B(_006_),
    .Y(data_out_Retorno[6])
  );
  NOR _106_ (
    .A(active),
    .B(_007_),
    .Y(data_out_Retorno[7])
  );
  NOR _107_ (
    .A(active),
    .B(_008_),
    .Y(data_out_Retorno[8])
  );
  NOR _108_ (
    .A(active),
    .B(_009_),
    .Y(data_out_Retorno[9])
  );
  NOR _109_ (
    .A(active),
    .B(_010_),
    .Y(data_out_Retorno[10])
  );
  NOR _110_ (
    .A(active),
    .B(_011_),
    .Y(data_out_Retorno[11])
  );
  NOR _111_ (
    .A(active),
    .B(_012_),
    .Y(data_out_Retorno[12])
  );
  NOR _112_ (
    .A(active),
    .B(_013_),
    .Y(data_out_Retorno[13])
  );
  NOR _113_ (
    .A(active),
    .B(_014_),
    .Y(data_out_Retorno[14])
  );
  NOR _114_ (
    .A(active),
    .B(_015_),
    .Y(data_out_Retorno[15])
  );
  NOR _115_ (
    .A(active),
    .B(_016_),
    .Y(data_out_Retorno[16])
  );
  NOR _116_ (
    .A(active),
    .B(_017_),
    .Y(data_out_Retorno[17])
  );
  NOR _117_ (
    .A(active),
    .B(_018_),
    .Y(data_out_Retorno[18])
  );
  NOR _118_ (
    .A(active),
    .B(_019_),
    .Y(data_out_Retorno[19])
  );
  NOR _119_ (
    .A(active),
    .B(_020_),
    .Y(data_out_Retorno[20])
  );
  NOR _120_ (
    .A(active),
    .B(_021_),
    .Y(data_out_Retorno[21])
  );
  NOR _121_ (
    .A(active),
    .B(_022_),
    .Y(data_out_Retorno[22])
  );
  NOR _122_ (
    .A(active),
    .B(_023_),
    .Y(data_out_Retorno[23])
  );
  NOR _123_ (
    .A(active),
    .B(_024_),
    .Y(data_out_Retorno[24])
  );
  NOR _124_ (
    .A(active),
    .B(_025_),
    .Y(data_out_Retorno[25])
  );
  NOR _125_ (
    .A(active),
    .B(_026_),
    .Y(data_out_Retorno[26])
  );
  NOR _126_ (
    .A(active),
    .B(_027_),
    .Y(data_out_Retorno[27])
  );
  NOR _127_ (
    .A(active),
    .B(_028_),
    .Y(data_out_Retorno[28])
  );
  NOR _128_ (
    .A(active),
    .B(_029_),
    .Y(data_out_Retorno[29])
  );
  NOR _129_ (
    .A(active),
    .B(_030_),
    .Y(data_out_Retorno[30])
  );
  NOR _130_ (
    .A(active),
    .B(_031_),
    .Y(data_out_Retorno[31])
  );
  NAND _131_ (
    .A(active),
    .B(data_in_Recir[0]),
    .Y(_033_)
  );
  NOT _132_ (
    .A(_033_),
    .Y(data_out_Recir[0])
  );
  NAND _133_ (
    .A(active),
    .B(data_in_Recir[1]),
    .Y(_034_)
  );
  NOT _134_ (
    .A(_034_),
    .Y(data_out_Recir[1])
  );
  NAND _135_ (
    .A(active),
    .B(data_in_Recir[2]),
    .Y(_035_)
  );
  NOT _136_ (
    .A(_035_),
    .Y(data_out_Recir[2])
  );
  NAND _137_ (
    .A(active),
    .B(data_in_Recir[3]),
    .Y(_036_)
  );
  NOT _138_ (
    .A(_036_),
    .Y(data_out_Recir[3])
  );
  NAND _139_ (
    .A(active),
    .B(data_in_Recir[4]),
    .Y(_037_)
  );
  NOT _140_ (
    .A(_037_),
    .Y(data_out_Recir[4])
  );
  NAND _141_ (
    .A(active),
    .B(data_in_Recir[5]),
    .Y(_038_)
  );
  NOT _142_ (
    .A(_038_),
    .Y(data_out_Recir[5])
  );
  NAND _143_ (
    .A(active),
    .B(data_in_Recir[6]),
    .Y(_039_)
  );
  NOT _144_ (
    .A(_039_),
    .Y(data_out_Recir[6])
  );
  NAND _145_ (
    .A(active),
    .B(data_in_Recir[7]),
    .Y(_040_)
  );
  NOT _146_ (
    .A(_040_),
    .Y(data_out_Recir[7])
  );
  NAND _147_ (
    .A(active),
    .B(data_in_Recir[8]),
    .Y(_041_)
  );
  NOT _148_ (
    .A(_041_),
    .Y(data_out_Recir[8])
  );
  NAND _149_ (
    .A(active),
    .B(data_in_Recir[9]),
    .Y(_042_)
  );
  NOT _150_ (
    .A(_042_),
    .Y(data_out_Recir[9])
  );
  NAND _151_ (
    .A(active),
    .B(data_in_Recir[10]),
    .Y(_043_)
  );
  NOT _152_ (
    .A(_043_),
    .Y(data_out_Recir[10])
  );
  NAND _153_ (
    .A(active),
    .B(data_in_Recir[11]),
    .Y(_044_)
  );
  NOT _154_ (
    .A(_044_),
    .Y(data_out_Recir[11])
  );
  NAND _155_ (
    .A(active),
    .B(data_in_Recir[12]),
    .Y(_045_)
  );
  NOT _156_ (
    .A(_045_),
    .Y(data_out_Recir[12])
  );
  NAND _157_ (
    .A(active),
    .B(data_in_Recir[13]),
    .Y(_046_)
  );
  NOT _158_ (
    .A(_046_),
    .Y(data_out_Recir[13])
  );
  NAND _159_ (
    .A(active),
    .B(data_in_Recir[14]),
    .Y(_047_)
  );
  NOT _160_ (
    .A(_047_),
    .Y(data_out_Recir[14])
  );
  NAND _161_ (
    .A(active),
    .B(data_in_Recir[15]),
    .Y(_048_)
  );
  NOT _162_ (
    .A(_048_),
    .Y(data_out_Recir[15])
  );
  NAND _163_ (
    .A(active),
    .B(data_in_Recir[16]),
    .Y(_049_)
  );
  NOT _164_ (
    .A(_049_),
    .Y(data_out_Recir[16])
  );
  NAND _165_ (
    .A(active),
    .B(data_in_Recir[17]),
    .Y(_050_)
  );
  NOT _166_ (
    .A(_050_),
    .Y(data_out_Recir[17])
  );
  NAND _167_ (
    .A(active),
    .B(data_in_Recir[18]),
    .Y(_051_)
  );
  NOT _168_ (
    .A(_051_),
    .Y(data_out_Recir[18])
  );
  NAND _169_ (
    .A(active),
    .B(data_in_Recir[19]),
    .Y(_052_)
  );
  NOT _170_ (
    .A(_052_),
    .Y(data_out_Recir[19])
  );
  NAND _171_ (
    .A(active),
    .B(data_in_Recir[20]),
    .Y(_053_)
  );
  NOT _172_ (
    .A(_053_),
    .Y(data_out_Recir[20])
  );
  NAND _173_ (
    .A(active),
    .B(data_in_Recir[21]),
    .Y(_054_)
  );
  NOT _174_ (
    .A(_054_),
    .Y(data_out_Recir[21])
  );
  NAND _175_ (
    .A(active),
    .B(data_in_Recir[22]),
    .Y(_055_)
  );
  NOT _176_ (
    .A(_055_),
    .Y(data_out_Recir[22])
  );
  NAND _177_ (
    .A(active),
    .B(data_in_Recir[23]),
    .Y(_056_)
  );
  NOT _178_ (
    .A(_056_),
    .Y(data_out_Recir[23])
  );
  NAND _179_ (
    .A(active),
    .B(data_in_Recir[24]),
    .Y(_057_)
  );
  NOT _180_ (
    .A(_057_),
    .Y(data_out_Recir[24])
  );
  NAND _181_ (
    .A(active),
    .B(data_in_Recir[25]),
    .Y(_058_)
  );
  NOT _182_ (
    .A(_058_),
    .Y(data_out_Recir[25])
  );
  NAND _183_ (
    .A(active),
    .B(data_in_Recir[26]),
    .Y(_059_)
  );
  NOT _184_ (
    .A(_059_),
    .Y(data_out_Recir[26])
  );
  NAND _185_ (
    .A(active),
    .B(data_in_Recir[27]),
    .Y(_060_)
  );
  NOT _186_ (
    .A(_060_),
    .Y(data_out_Recir[27])
  );
  NAND _187_ (
    .A(active),
    .B(data_in_Recir[28]),
    .Y(_061_)
  );
  NOT _188_ (
    .A(_061_),
    .Y(data_out_Recir[28])
  );
  NAND _189_ (
    .A(active),
    .B(data_in_Recir[29]),
    .Y(_062_)
  );
  NOT _190_ (
    .A(_062_),
    .Y(data_out_Recir[29])
  );
  NAND _191_ (
    .A(active),
    .B(data_in_Recir[30]),
    .Y(_063_)
  );
  NOT _192_ (
    .A(_063_),
    .Y(data_out_Recir[30])
  );
  NAND _193_ (
    .A(active),
    .B(data_in_Recir[31]),
    .Y(_064_)
  );
  NOT _194_ (
    .A(_064_),
    .Y(data_out_Recir[31])
  );
endmodule

(* top =  1  *)
(* src = "phy_tx_synth.v:1.1-116.10" *)
module phy_tx_synth(clk_f, clk_2f, clk_4f, clk_32f, reset_L, active_lane0, active_lane1, valid_in, data_in, data_out_lane0, data_out_lane1, data_out_Recirc_Retorno);
  wire _0_;
  (* src = "phy_tx_synth.v:37.6-37.12" *)
  wire active;
  (* src = "phy_tx_synth.v:7.11-7.23" *)
  input active_lane0;
  (* src = "phy_tx_synth.v:8.11-8.23" *)
  input active_lane1;
  (* src = "phy_tx_synth.v:3.11-3.17" *)
  input clk_2f;
  (* src = "phy_tx_synth.v:5.11-5.18" *)
  input clk_32f;
  (* src = "phy_tx_synth.v:4.11-4.17" *)
  input clk_4f;
  (* src = "phy_tx_synth.v:2.11-2.16" *)
  input clk_f;
  (* src = "phy_tx_synth.v:10.17-10.24" *)
  input [31:0] data_in;
  (* src = "phy_tx_synth.v:29.12-29.31" *)
  (* unused_bits = "1 2 3 4 5 6 7" *)
  wire [7:0] data_out_32_8_lane0;
  (* src = "phy_tx_synth.v:31.12-31.31" *)
  (* unused_bits = "1 2 3 4 5 6 7" *)
  wire [7:0] data_out_32_8_lane1;
  (* src = "phy_tx_synth.v:18.13-18.27" *)
  wire [31:0] data_out_Flops;
  (* src = "phy_tx_synth.v:21.13-21.27" *)
  wire [31:0] data_out_Recir;
  (* src = "phy_tx_synth.v:13.22-13.45" *)
  output [31:0] data_out_Recirc_Retorno;
  (* src = "phy_tx_synth.v:22.13-22.29" *)
  wire [31:0] data_out_Retorno;
  (* src = "phy_tx_synth.v:25.13-25.42" *)
  wire [31:0] data_out_demux_striping_synth_lane0;
  (* src = "phy_tx_synth.v:27.13-27.42" *)
  wire [31:0] data_out_demux_striping_synth_lane1;
  (* src = "phy_tx_synth.v:11.16-11.30" *)
  output data_out_lane0;
  (* src = "phy_tx_synth.v:12.16-12.30" *)
  output data_out_lane1;
  (* src = "phy_tx_synth.v:6.11-6.18" *)
  input reset_L;
  (* src = "phy_tx_synth.v:9.11-9.19" *)
  input valid_in;
  (* src = "phy_tx_synth.v:30.6-30.26" *)
  (* unused_bits = "0" *)
  wire valid_out_32_8_lane0;
  (* src = "phy_tx_synth.v:32.6-32.26" *)
  (* unused_bits = "0" *)
  wire valid_out_32_8_lane1;
  (* src = "phy_tx_synth.v:17.6-17.21" *)
  wire valid_out_Flops;
  (* src = "phy_tx_synth.v:20.6-20.21" *)
  wire valid_out_Recir;
  (* src = "phy_tx_synth.v:24.6-24.36" *)
  wire valid_out_demux_striping_synth_lane0;
  (* src = "phy_tx_synth.v:26.6-26.36" *)
  wire valid_out_demux_striping_synth_lane1;
  NAND _1_ (
    .A(active_lane0),
    .B(active_lane1),
    .Y(_0_)
  );
  NOT _2_ (
    .A(_0_),
    .Y(active)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "phy_tx_synth.v:60.16-70.39" *)
  demux_striping_synth Demux_striping (
    .clk_2f(clk_2f),
    .data_in(data_out_Recir),
    .data_out0(data_out_demux_striping_synth_lane0),
    .data_out1(data_out_demux_striping_synth_lane1),
    .reset_L(reset_L),
    .valid_in(valid_out_Recir),
    .valid_out_0(valid_out_demux_striping_synth_lane0),
    .valid_out_1(valid_out_demux_striping_synth_lane1)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "phy_tx_synth.v:40.14-48.32" *)
  module_Flops_synth Flops (
    .clk_2f(clk_2f),
    .data_in(data_in),
    .data_out_Flops(data_out_Flops),
    .reset_L(reset_L),
    .valid_in(valid_in),
    .valid_out_Flops(valid_out_Flops)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "phy_tx_synth.v:50.22-58.46" *)
  module_Recirculacion_synth Recirculacion (
    .active(active),
    .data_in_Recir(data_out_Flops),
    .data_out_Recir(data_out_Recir),
    .data_out_Retorno(data_out_Retorno),
    .valid_in_Recir(valid_out_Flops),
    .valid_out_Recir(valid_out_Recir)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "phy_tx_synth.v:72.11-80.50" *)
  Demux32_8_synth demux32_8_lane0 (
    .clk_4f(clk_4f),
    .clk_f(clk_f),
    .data_in(data_out_demux_striping_synth_lane0),
    .data_out(data_out_32_8_lane0),
    .valid_in(valid_out_demux_striping_synth_lane0),
    .valid_out(valid_out_32_8_lane0)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "phy_tx_synth.v:82.11-90.50" *)
  Demux32_8_synth demux32_8_lane1 (
    .clk_4f(clk_4f),
    .clk_f(clk_f),
    .data_in(data_out_demux_striping_synth_lane1),
    .data_out(data_out_32_8_lane1),
    .valid_in(valid_out_demux_striping_synth_lane1),
    .valid_out(valid_out_32_8_lane1)
  );
  assign data_out_Recirc_Retorno = data_out_Retorno;
  assign data_out_lane0 = data_out_32_8_lane0[0];
  assign data_out_lane1 = data_out_32_8_lane1[0];
endmodule
