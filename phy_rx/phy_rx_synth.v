/* Generated by Yosys 0.7 (git sha1 61f6811, gcc 6.3.0-18+deb9u1 -O2 -fdebug-prefix-map=/build/yosys-XOsRIM/yosys-0.7=. -fstack-protector-strong -fPIC -Os) */

(* src = "Mux8_32_synth.v:1" *)
module Mux8_32_synth(clk_f, clk_4f, data_in, valid_in, reset, data_out, valid_out);
  (* src = "Mux8_32_synth.v:32" *)
  wire [31:0] _000_;
  (* src = "Mux8_32_synth.v:19" *)
  wire [31:0] _001_;
  (* src = "Mux8_32_synth.v:32" *)
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  (* src = "Mux8_32_synth.v:3" *)
  input clk_4f;
  (* src = "Mux8_32_synth.v:2" *)
  input clk_f;
  (* src = "Mux8_32_synth.v:4" *)
  input [7:0] data_in;
  (* src = "Mux8_32_synth.v:7" *)
  output [31:0] data_out;
  (* src = "Mux8_32_synth.v:16" *)
  wire [31:0] mem;
  (* src = "Mux8_32_synth.v:11" *)
  wire notclk_4f;
  (* src = "Mux8_32_synth.v:6" *)
  input reset;
  (* src = "Mux8_32_synth.v:5" *)
  input valid_in;
  (* src = "Mux8_32_synth.v:8" *)
  output valid_out;
  NOT _046_ (
    .A(valid_in),
    .Y(_003_)
  );
  NOT _047_ (
    .A(reset),
    .Y(_004_)
  );
  NOR _048_ (
    .A(_004_),
    .B(_003_),
    .Y(_002_)
  );
  NOT _049_ (
    .A(mem[0]),
    .Y(_005_)
  );
  NAND _050_ (
    .A(reset),
    .B(valid_in),
    .Y(_006_)
  );
  NOR _051_ (
    .A(_006_),
    .B(_005_),
    .Y(_000_[0])
  );
  NOT _052_ (
    .A(mem[1]),
    .Y(_007_)
  );
  NOR _053_ (
    .A(_006_),
    .B(_007_),
    .Y(_000_[1])
  );
  NOT _054_ (
    .A(mem[2]),
    .Y(_008_)
  );
  NOR _055_ (
    .A(_006_),
    .B(_008_),
    .Y(_000_[2])
  );
  NOT _056_ (
    .A(mem[3]),
    .Y(_009_)
  );
  NOR _057_ (
    .A(_006_),
    .B(_009_),
    .Y(_000_[3])
  );
  NOT _058_ (
    .A(mem[4]),
    .Y(_010_)
  );
  NOR _059_ (
    .A(_006_),
    .B(_010_),
    .Y(_000_[4])
  );
  NOT _060_ (
    .A(mem[5]),
    .Y(_011_)
  );
  NOR _061_ (
    .A(_006_),
    .B(_011_),
    .Y(_000_[5])
  );
  NOT _062_ (
    .A(mem[6]),
    .Y(_012_)
  );
  NOR _063_ (
    .A(_006_),
    .B(_012_),
    .Y(_000_[6])
  );
  NOT _064_ (
    .A(mem[7]),
    .Y(_013_)
  );
  NOR _065_ (
    .A(_006_),
    .B(_013_),
    .Y(_000_[7])
  );
  NOT _066_ (
    .A(mem[8]),
    .Y(_014_)
  );
  NOR _067_ (
    .A(_006_),
    .B(_014_),
    .Y(_000_[8])
  );
  NOT _068_ (
    .A(mem[9]),
    .Y(_015_)
  );
  NOR _069_ (
    .A(_006_),
    .B(_015_),
    .Y(_000_[9])
  );
  NOT _070_ (
    .A(mem[10]),
    .Y(_016_)
  );
  NOR _071_ (
    .A(_006_),
    .B(_016_),
    .Y(_000_[10])
  );
  NOT _072_ (
    .A(mem[11]),
    .Y(_017_)
  );
  NOR _073_ (
    .A(_006_),
    .B(_017_),
    .Y(_000_[11])
  );
  NOT _074_ (
    .A(mem[12]),
    .Y(_018_)
  );
  NOR _075_ (
    .A(_006_),
    .B(_018_),
    .Y(_000_[12])
  );
  NOT _076_ (
    .A(mem[13]),
    .Y(_019_)
  );
  NOR _077_ (
    .A(_006_),
    .B(_019_),
    .Y(_000_[13])
  );
  NOT _078_ (
    .A(mem[14]),
    .Y(_020_)
  );
  NOR _079_ (
    .A(_006_),
    .B(_020_),
    .Y(_000_[14])
  );
  NOT _080_ (
    .A(mem[15]),
    .Y(_021_)
  );
  NOR _081_ (
    .A(_006_),
    .B(_021_),
    .Y(_000_[15])
  );
  NOT _082_ (
    .A(mem[16]),
    .Y(_022_)
  );
  NOR _083_ (
    .A(_006_),
    .B(_022_),
    .Y(_000_[16])
  );
  NOT _084_ (
    .A(mem[17]),
    .Y(_023_)
  );
  NOR _085_ (
    .A(_006_),
    .B(_023_),
    .Y(_000_[17])
  );
  NOT _086_ (
    .A(mem[18]),
    .Y(_024_)
  );
  NOR _087_ (
    .A(_006_),
    .B(_024_),
    .Y(_000_[18])
  );
  NOT _088_ (
    .A(mem[19]),
    .Y(_025_)
  );
  NOR _089_ (
    .A(_006_),
    .B(_025_),
    .Y(_000_[19])
  );
  NOT _090_ (
    .A(mem[20]),
    .Y(_026_)
  );
  NOR _091_ (
    .A(_006_),
    .B(_026_),
    .Y(_000_[20])
  );
  NOT _092_ (
    .A(mem[21]),
    .Y(_027_)
  );
  NOR _093_ (
    .A(_006_),
    .B(_027_),
    .Y(_000_[21])
  );
  NOT _094_ (
    .A(mem[22]),
    .Y(_028_)
  );
  NOR _095_ (
    .A(_006_),
    .B(_028_),
    .Y(_000_[22])
  );
  NOT _096_ (
    .A(mem[23]),
    .Y(_029_)
  );
  NOR _097_ (
    .A(_006_),
    .B(_029_),
    .Y(_000_[23])
  );
  NOT _098_ (
    .A(mem[24]),
    .Y(_030_)
  );
  NOR _099_ (
    .A(_006_),
    .B(_030_),
    .Y(_000_[24])
  );
  NOT _100_ (
    .A(mem[25]),
    .Y(_031_)
  );
  NOR _101_ (
    .A(_006_),
    .B(_031_),
    .Y(_000_[25])
  );
  NOT _102_ (
    .A(mem[26]),
    .Y(_032_)
  );
  NOR _103_ (
    .A(_006_),
    .B(_032_),
    .Y(_000_[26])
  );
  NOT _104_ (
    .A(mem[27]),
    .Y(_033_)
  );
  NOR _105_ (
    .A(_006_),
    .B(_033_),
    .Y(_000_[27])
  );
  NOT _106_ (
    .A(mem[28]),
    .Y(_034_)
  );
  NOR _107_ (
    .A(_006_),
    .B(_034_),
    .Y(_000_[28])
  );
  NOT _108_ (
    .A(mem[29]),
    .Y(_035_)
  );
  NOR _109_ (
    .A(_006_),
    .B(_035_),
    .Y(_000_[29])
  );
  NOT _110_ (
    .A(mem[30]),
    .Y(_036_)
  );
  NOR _111_ (
    .A(_006_),
    .B(_036_),
    .Y(_000_[30])
  );
  NOT _112_ (
    .A(mem[31]),
    .Y(_037_)
  );
  NOR _113_ (
    .A(_006_),
    .B(_037_),
    .Y(_000_[31])
  );
  NOR _114_ (
    .A(_003_),
    .B(_022_),
    .Y(_001_[24])
  );
  NOR _115_ (
    .A(_003_),
    .B(_023_),
    .Y(_001_[25])
  );
  NOR _116_ (
    .A(_003_),
    .B(_024_),
    .Y(_001_[26])
  );
  NOR _117_ (
    .A(_003_),
    .B(_025_),
    .Y(_001_[27])
  );
  NOR _118_ (
    .A(_003_),
    .B(_026_),
    .Y(_001_[28])
  );
  NOR _119_ (
    .A(_003_),
    .B(_027_),
    .Y(_001_[29])
  );
  NOR _120_ (
    .A(_003_),
    .B(_028_),
    .Y(_001_[30])
  );
  NOR _121_ (
    .A(_003_),
    .B(_029_),
    .Y(_001_[31])
  );
  NOR _122_ (
    .A(_003_),
    .B(_005_),
    .Y(_001_[8])
  );
  NOR _123_ (
    .A(_003_),
    .B(_007_),
    .Y(_001_[9])
  );
  NOR _124_ (
    .A(_003_),
    .B(_008_),
    .Y(_001_[10])
  );
  NOR _125_ (
    .A(_003_),
    .B(_009_),
    .Y(_001_[11])
  );
  NOR _126_ (
    .A(_003_),
    .B(_010_),
    .Y(_001_[12])
  );
  NOR _127_ (
    .A(_003_),
    .B(_011_),
    .Y(_001_[13])
  );
  NOR _128_ (
    .A(_003_),
    .B(_012_),
    .Y(_001_[14])
  );
  NOR _129_ (
    .A(_003_),
    .B(_013_),
    .Y(_001_[15])
  );
  NOT _130_ (
    .A(data_in[0]),
    .Y(_038_)
  );
  NOR _131_ (
    .A(_038_),
    .B(_003_),
    .Y(_001_[0])
  );
  NOT _132_ (
    .A(data_in[1]),
    .Y(_039_)
  );
  NOR _133_ (
    .A(_039_),
    .B(_003_),
    .Y(_001_[1])
  );
  NOT _134_ (
    .A(data_in[2]),
    .Y(_040_)
  );
  NOR _135_ (
    .A(_040_),
    .B(_003_),
    .Y(_001_[2])
  );
  NOT _136_ (
    .A(data_in[3]),
    .Y(_041_)
  );
  NOR _137_ (
    .A(_041_),
    .B(_003_),
    .Y(_001_[3])
  );
  NOT _138_ (
    .A(data_in[4]),
    .Y(_042_)
  );
  NOR _139_ (
    .A(_042_),
    .B(_003_),
    .Y(_001_[4])
  );
  NOT _140_ (
    .A(data_in[5]),
    .Y(_043_)
  );
  NOR _141_ (
    .A(_043_),
    .B(_003_),
    .Y(_001_[5])
  );
  NOT _142_ (
    .A(data_in[6]),
    .Y(_044_)
  );
  NOR _143_ (
    .A(_044_),
    .B(_003_),
    .Y(_001_[6])
  );
  NOT _144_ (
    .A(data_in[7]),
    .Y(_045_)
  );
  NOR _145_ (
    .A(_045_),
    .B(_003_),
    .Y(_001_[7])
  );
  NOR _146_ (
    .A(_003_),
    .B(_014_),
    .Y(_001_[16])
  );
  NOR _147_ (
    .A(_003_),
    .B(_015_),
    .Y(_001_[17])
  );
  NOR _148_ (
    .A(_003_),
    .B(_016_),
    .Y(_001_[18])
  );
  NOR _149_ (
    .A(_003_),
    .B(_017_),
    .Y(_001_[19])
  );
  NOR _150_ (
    .A(_003_),
    .B(_018_),
    .Y(_001_[20])
  );
  NOR _151_ (
    .A(_003_),
    .B(_019_),
    .Y(_001_[21])
  );
  NOR _152_ (
    .A(_003_),
    .B(_020_),
    .Y(_001_[22])
  );
  NOR _153_ (
    .A(_003_),
    .B(_021_),
    .Y(_001_[23])
  );
  NOT _154_ (
    .A(clk_4f),
    .Y(notclk_4f)
  );
  DFF _155_ (
    .C(clk_f),
    .D(_000_[0]),
    .Q(data_out[0])
  );
  DFF _156_ (
    .C(clk_f),
    .D(_000_[1]),
    .Q(data_out[1])
  );
  DFF _157_ (
    .C(clk_f),
    .D(_000_[2]),
    .Q(data_out[2])
  );
  DFF _158_ (
    .C(clk_f),
    .D(_000_[3]),
    .Q(data_out[3])
  );
  DFF _159_ (
    .C(clk_f),
    .D(_000_[4]),
    .Q(data_out[4])
  );
  DFF _160_ (
    .C(clk_f),
    .D(_000_[5]),
    .Q(data_out[5])
  );
  DFF _161_ (
    .C(clk_f),
    .D(_000_[6]),
    .Q(data_out[6])
  );
  DFF _162_ (
    .C(clk_f),
    .D(_000_[7]),
    .Q(data_out[7])
  );
  DFF _163_ (
    .C(clk_f),
    .D(_000_[8]),
    .Q(data_out[8])
  );
  DFF _164_ (
    .C(clk_f),
    .D(_000_[9]),
    .Q(data_out[9])
  );
  DFF _165_ (
    .C(clk_f),
    .D(_000_[10]),
    .Q(data_out[10])
  );
  DFF _166_ (
    .C(clk_f),
    .D(_000_[11]),
    .Q(data_out[11])
  );
  DFF _167_ (
    .C(clk_f),
    .D(_000_[12]),
    .Q(data_out[12])
  );
  DFF _168_ (
    .C(clk_f),
    .D(_000_[13]),
    .Q(data_out[13])
  );
  DFF _169_ (
    .C(clk_f),
    .D(_000_[14]),
    .Q(data_out[14])
  );
  DFF _170_ (
    .C(clk_f),
    .D(_000_[15]),
    .Q(data_out[15])
  );
  DFF _171_ (
    .C(clk_f),
    .D(_000_[16]),
    .Q(data_out[16])
  );
  DFF _172_ (
    .C(clk_f),
    .D(_000_[17]),
    .Q(data_out[17])
  );
  DFF _173_ (
    .C(clk_f),
    .D(_000_[18]),
    .Q(data_out[18])
  );
  DFF _174_ (
    .C(clk_f),
    .D(_000_[19]),
    .Q(data_out[19])
  );
  DFF _175_ (
    .C(clk_f),
    .D(_000_[20]),
    .Q(data_out[20])
  );
  DFF _176_ (
    .C(clk_f),
    .D(_000_[21]),
    .Q(data_out[21])
  );
  DFF _177_ (
    .C(clk_f),
    .D(_000_[22]),
    .Q(data_out[22])
  );
  DFF _178_ (
    .C(clk_f),
    .D(_000_[23]),
    .Q(data_out[23])
  );
  DFF _179_ (
    .C(clk_f),
    .D(_000_[24]),
    .Q(data_out[24])
  );
  DFF _180_ (
    .C(clk_f),
    .D(_000_[25]),
    .Q(data_out[25])
  );
  DFF _181_ (
    .C(clk_f),
    .D(_000_[26]),
    .Q(data_out[26])
  );
  DFF _182_ (
    .C(clk_f),
    .D(_000_[27]),
    .Q(data_out[27])
  );
  DFF _183_ (
    .C(clk_f),
    .D(_000_[28]),
    .Q(data_out[28])
  );
  DFF _184_ (
    .C(clk_f),
    .D(_000_[29]),
    .Q(data_out[29])
  );
  DFF _185_ (
    .C(clk_f),
    .D(_000_[30]),
    .Q(data_out[30])
  );
  DFF _186_ (
    .C(clk_f),
    .D(_000_[31]),
    .Q(data_out[31])
  );
  DFF _187_ (
    .C(clk_f),
    .D(_002_),
    .Q(valid_out)
  );
  DFF _188_ (
    .C(notclk_4f),
    .D(_001_[0]),
    .Q(mem[0])
  );
  DFF _189_ (
    .C(notclk_4f),
    .D(_001_[1]),
    .Q(mem[1])
  );
  DFF _190_ (
    .C(notclk_4f),
    .D(_001_[2]),
    .Q(mem[2])
  );
  DFF _191_ (
    .C(notclk_4f),
    .D(_001_[3]),
    .Q(mem[3])
  );
  DFF _192_ (
    .C(notclk_4f),
    .D(_001_[4]),
    .Q(mem[4])
  );
  DFF _193_ (
    .C(notclk_4f),
    .D(_001_[5]),
    .Q(mem[5])
  );
  DFF _194_ (
    .C(notclk_4f),
    .D(_001_[6]),
    .Q(mem[6])
  );
  DFF _195_ (
    .C(notclk_4f),
    .D(_001_[7]),
    .Q(mem[7])
  );
  DFF _196_ (
    .C(notclk_4f),
    .D(_001_[8]),
    .Q(mem[8])
  );
  DFF _197_ (
    .C(notclk_4f),
    .D(_001_[9]),
    .Q(mem[9])
  );
  DFF _198_ (
    .C(notclk_4f),
    .D(_001_[10]),
    .Q(mem[10])
  );
  DFF _199_ (
    .C(notclk_4f),
    .D(_001_[11]),
    .Q(mem[11])
  );
  DFF _200_ (
    .C(notclk_4f),
    .D(_001_[12]),
    .Q(mem[12])
  );
  DFF _201_ (
    .C(notclk_4f),
    .D(_001_[13]),
    .Q(mem[13])
  );
  DFF _202_ (
    .C(notclk_4f),
    .D(_001_[14]),
    .Q(mem[14])
  );
  DFF _203_ (
    .C(notclk_4f),
    .D(_001_[15]),
    .Q(mem[15])
  );
  DFF _204_ (
    .C(notclk_4f),
    .D(_001_[16]),
    .Q(mem[16])
  );
  DFF _205_ (
    .C(notclk_4f),
    .D(_001_[17]),
    .Q(mem[17])
  );
  DFF _206_ (
    .C(notclk_4f),
    .D(_001_[18]),
    .Q(mem[18])
  );
  DFF _207_ (
    .C(notclk_4f),
    .D(_001_[19]),
    .Q(mem[19])
  );
  DFF _208_ (
    .C(notclk_4f),
    .D(_001_[20]),
    .Q(mem[20])
  );
  DFF _209_ (
    .C(notclk_4f),
    .D(_001_[21]),
    .Q(mem[21])
  );
  DFF _210_ (
    .C(notclk_4f),
    .D(_001_[22]),
    .Q(mem[22])
  );
  DFF _211_ (
    .C(notclk_4f),
    .D(_001_[23]),
    .Q(mem[23])
  );
  DFF _212_ (
    .C(notclk_4f),
    .D(_001_[24]),
    .Q(mem[24])
  );
  DFF _213_ (
    .C(notclk_4f),
    .D(_001_[25]),
    .Q(mem[25])
  );
  DFF _214_ (
    .C(notclk_4f),
    .D(_001_[26]),
    .Q(mem[26])
  );
  DFF _215_ (
    .C(notclk_4f),
    .D(_001_[27]),
    .Q(mem[27])
  );
  DFF _216_ (
    .C(notclk_4f),
    .D(_001_[28]),
    .Q(mem[28])
  );
  DFF _217_ (
    .C(notclk_4f),
    .D(_001_[29]),
    .Q(mem[29])
  );
  DFF _218_ (
    .C(notclk_4f),
    .D(_001_[30]),
    .Q(mem[30])
  );
  DFF _219_ (
    .C(notclk_4f),
    .D(_001_[31]),
    .Q(mem[31])
  );
endmodule

(* src = "Serial_Paralelo_synth.v:1" *)
module Serial_Paralelo_synth(clk_4f, clk_32f, data_in, reset, data_out, valid_out, active);
  (* src = "Serial_Paralelo_synth.v:34" *)
  wire _000_;
  (* src = "Serial_Paralelo_synth.v:61" *)
  wire [7:0] _001_;
  (* src = "Serial_Paralelo_synth.v:61" *)
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  (* src = "Serial_Paralelo_synth.v:8" *)
  output active;
  (* src = "Serial_Paralelo_synth.v:14" *)
  wire [7:0] buffer;
  (* src = "Serial_Paralelo_synth.v:3" *)
  input clk_32f;
  (* src = "Serial_Paralelo_synth.v:2" *)
  input clk_4f;
  (* onehot = 32'd1 *)
  wire [3:0] counter;
  (* src = "Serial_Paralelo_synth.v:4" *)
  input data_in;
  (* src = "Serial_Paralelo_synth.v:6" *)
  output [7:0] data_out;
  (* src = "Serial_Paralelo_synth.v:16" *)
  wire not_clk;
  (* src = "Serial_Paralelo_synth.v:5" *)
  input reset;
  (* src = "Serial_Paralelo_synth.v:7" *)
  output valid_out;
  NOT _044_ (
    .A(reset),
    .Y(_007_)
  );
  NAND _045_ (
    .A(buffer[4]),
    .B(buffer[3]),
    .Y(_008_)
  );
  NAND _046_ (
    .A(buffer[7]),
    .B(buffer[5]),
    .Y(_009_)
  );
  NOR _047_ (
    .A(_009_),
    .B(_008_),
    .Y(_010_)
  );
  NOT _048_ (
    .A(buffer[1]),
    .Y(_011_)
  );
  NOT _049_ (
    .A(buffer[6]),
    .Y(_012_)
  );
  NAND _050_ (
    .A(_012_),
    .B(_011_),
    .Y(_013_)
  );
  NOT _051_ (
    .A(buffer[0]),
    .Y(_014_)
  );
  NAND _052_ (
    .A(buffer[2]),
    .B(_014_),
    .Y(_015_)
  );
  NOR _053_ (
    .A(_015_),
    .B(_013_),
    .Y(_016_)
  );
  NAND _054_ (
    .A(_016_),
    .B(_010_),
    .Y(_017_)
  );
  NOT _055_ (
    .A(active),
    .Y(_018_)
  );
  NAND _056_ (
    .A(_018_),
    .B(reset),
    .Y(_019_)
  );
  NOR _057_ (
    .A(_019_),
    .B(_017_),
    .Y(_020_)
  );
  NOR _058_ (
    .A(_020_),
    .B(_007_),
    .Y(_021_)
  );
  NAND _059_ (
    .A(_021_),
    .B(counter[1]),
    .Y(_022_)
  );
  NAND _060_ (
    .A(_020_),
    .B(counter[2]),
    .Y(_023_)
  );
  NAND _061_ (
    .A(_023_),
    .B(_022_),
    .Y(_003_)
  );
  NAND _062_ (
    .A(_021_),
    .B(counter[3]),
    .Y(_024_)
  );
  NAND _063_ (
    .A(_020_),
    .B(counter[1]),
    .Y(_025_)
  );
  NAND _064_ (
    .A(_025_),
    .B(_024_),
    .Y(_004_)
  );
  NAND _065_ (
    .A(_021_),
    .B(counter[2]),
    .Y(_026_)
  );
  NAND _066_ (
    .A(_020_),
    .B(counter[0]),
    .Y(_027_)
  );
  NAND _067_ (
    .A(_027_),
    .B(_026_),
    .Y(_005_)
  );
  NOT _068_ (
    .A(counter[0]),
    .Y(_028_)
  );
  NOR _069_ (
    .A(_020_),
    .B(_028_),
    .Y(_029_)
  );
  NOR _070_ (
    .A(_029_),
    .B(_007_),
    .Y(_030_)
  );
  NAND _071_ (
    .A(_020_),
    .B(counter[3]),
    .Y(_031_)
  );
  NAND _072_ (
    .A(_031_),
    .B(_030_),
    .Y(_006_)
  );
  NAND _073_ (
    .A(_017_),
    .B(active),
    .Y(_032_)
  );
  NOT _074_ (
    .A(_032_),
    .Y(_002_)
  );
  NOR _075_ (
    .A(_018_),
    .B(_014_),
    .Y(_001_[0])
  );
  NOR _076_ (
    .A(_018_),
    .B(_011_),
    .Y(_001_[1])
  );
  NOT _077_ (
    .A(buffer[2]),
    .Y(_033_)
  );
  NOR _078_ (
    .A(_032_),
    .B(_033_),
    .Y(_001_[2])
  );
  NOT _079_ (
    .A(buffer[3]),
    .Y(_034_)
  );
  NOR _080_ (
    .A(_032_),
    .B(_034_),
    .Y(_001_[3])
  );
  NOT _081_ (
    .A(buffer[4]),
    .Y(_035_)
  );
  NOR _082_ (
    .A(_032_),
    .B(_035_),
    .Y(_001_[4])
  );
  NOT _083_ (
    .A(buffer[5]),
    .Y(_036_)
  );
  NOR _084_ (
    .A(_032_),
    .B(_036_),
    .Y(_001_[5])
  );
  NOR _085_ (
    .A(_018_),
    .B(_012_),
    .Y(_001_[6])
  );
  NOT _086_ (
    .A(buffer[7]),
    .Y(_037_)
  );
  NOR _087_ (
    .A(_032_),
    .B(_037_),
    .Y(_001_[7])
  );
  NOT _088_ (
    .A(counter[3]),
    .Y(_038_)
  );
  NOR _089_ (
    .A(counter[1]),
    .B(_038_),
    .Y(_039_)
  );
  NOR _090_ (
    .A(counter[0]),
    .B(counter[2]),
    .Y(_040_)
  );
  NAND _091_ (
    .A(_040_),
    .B(_039_),
    .Y(_041_)
  );
  NOR _092_ (
    .A(_041_),
    .B(_017_),
    .Y(_042_)
  );
  NOR _093_ (
    .A(_042_),
    .B(active),
    .Y(_043_)
  );
  NOR _094_ (
    .A(_043_),
    .B(_007_),
    .Y(_000_)
  );
  NOT _095_ (
    .A(clk_32f),
    .Y(not_clk)
  );
  DFF _096_ (
    .C(clk_32f),
    .D(_006_),
    .Q(counter[0])
  );
  DFF _097_ (
    .C(clk_32f),
    .D(_003_),
    .Q(counter[1])
  );
  DFF _098_ (
    .C(clk_32f),
    .D(_005_),
    .Q(counter[2])
  );
  DFF _099_ (
    .C(clk_32f),
    .D(_004_),
    .Q(counter[3])
  );
  DFF _100_ (
    .C(clk_4f),
    .D(_001_[0]),
    .Q(data_out[0])
  );
  DFF _101_ (
    .C(clk_4f),
    .D(_001_[1]),
    .Q(data_out[1])
  );
  DFF _102_ (
    .C(clk_4f),
    .D(_001_[2]),
    .Q(data_out[2])
  );
  DFF _103_ (
    .C(clk_4f),
    .D(_001_[3]),
    .Q(data_out[3])
  );
  DFF _104_ (
    .C(clk_4f),
    .D(_001_[4]),
    .Q(data_out[4])
  );
  DFF _105_ (
    .C(clk_4f),
    .D(_001_[5]),
    .Q(data_out[5])
  );
  DFF _106_ (
    .C(clk_4f),
    .D(_001_[6]),
    .Q(data_out[6])
  );
  DFF _107_ (
    .C(clk_4f),
    .D(_001_[7]),
    .Q(data_out[7])
  );
  DFF _108_ (
    .C(clk_4f),
    .D(_002_),
    .Q(valid_out)
  );
  DFF _109_ (
    .C(clk_32f),
    .D(_000_),
    .Q(active)
  );
  DFF _110_ (
    .C(not_clk),
    .D(data_in),
    .Q(buffer[0])
  );
  DFF _111_ (
    .C(not_clk),
    .D(buffer[0]),
    .Q(buffer[1])
  );
  DFF _112_ (
    .C(not_clk),
    .D(buffer[1]),
    .Q(buffer[2])
  );
  DFF _113_ (
    .C(not_clk),
    .D(buffer[2]),
    .Q(buffer[3])
  );
  DFF _114_ (
    .C(not_clk),
    .D(buffer[3]),
    .Q(buffer[4])
  );
  DFF _115_ (
    .C(not_clk),
    .D(buffer[4]),
    .Q(buffer[5])
  );
  DFF _116_ (
    .C(not_clk),
    .D(buffer[5]),
    .Q(buffer[6])
  );
  DFF _117_ (
    .C(not_clk),
    .D(buffer[6]),
    .Q(buffer[7])
  );
endmodule

(* src = "module_Flops_synth.v:1" *)
module module_Flops_synth(clk_Flops, reset_L, valid_in_Flops, data_in_Flops, valid_out_Flops, data_out_Flops);
  (* src = "module_Flops_synth.v:18" *)
  wire [31:0] _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  (* src = "module_Flops_synth.v:2" *)
  input clk_Flops;
  (* src = "module_Flops_synth.v:5" *)
  input [31:0] data_in_Flops;
  (* src = "module_Flops_synth.v:7" *)
  output [31:0] data_out_Flops;
  (* src = "module_Flops_synth.v:3" *)
  input reset_L;
  (* src = "module_Flops_synth.v:4" *)
  input valid_in_Flops;
  (* src = "module_Flops_synth.v:6" *)
  output valid_out_Flops;
  NOT _131_ (
    .A(valid_in_Flops),
    .Y(_126_)
  );
  NOR _132_ (
    .A(_126_),
    .B(_125_),
    .Y(valid_out_Flops)
  );
  NOR _133_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[0]),
    .Y(_127_)
  );
  NOT _134_ (
    .A(data_in_Flops[0]),
    .Y(_128_)
  );
  NAND _135_ (
    .A(valid_in_Flops),
    .B(_128_),
    .Y(_129_)
  );
  NAND _136_ (
    .A(_129_),
    .B(reset_L),
    .Y(_130_)
  );
  NOR _137_ (
    .A(_130_),
    .B(_127_),
    .Y(_000_[0])
  );
  NOR _138_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[1]),
    .Y(_001_)
  );
  NOT _139_ (
    .A(data_in_Flops[1]),
    .Y(_002_)
  );
  NAND _140_ (
    .A(valid_in_Flops),
    .B(_002_),
    .Y(_003_)
  );
  NAND _141_ (
    .A(_003_),
    .B(reset_L),
    .Y(_004_)
  );
  NOR _142_ (
    .A(_004_),
    .B(_001_),
    .Y(_000_[1])
  );
  NOR _143_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[2]),
    .Y(_005_)
  );
  NOT _144_ (
    .A(data_in_Flops[2]),
    .Y(_006_)
  );
  NAND _145_ (
    .A(valid_in_Flops),
    .B(_006_),
    .Y(_007_)
  );
  NAND _146_ (
    .A(_007_),
    .B(reset_L),
    .Y(_008_)
  );
  NOR _147_ (
    .A(_008_),
    .B(_005_),
    .Y(_000_[2])
  );
  NOR _148_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[3]),
    .Y(_009_)
  );
  NOT _149_ (
    .A(data_in_Flops[3]),
    .Y(_010_)
  );
  NAND _150_ (
    .A(valid_in_Flops),
    .B(_010_),
    .Y(_011_)
  );
  NAND _151_ (
    .A(_011_),
    .B(reset_L),
    .Y(_012_)
  );
  NOR _152_ (
    .A(_012_),
    .B(_009_),
    .Y(_000_[3])
  );
  NOR _153_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[4]),
    .Y(_013_)
  );
  NOT _154_ (
    .A(data_in_Flops[4]),
    .Y(_014_)
  );
  NAND _155_ (
    .A(valid_in_Flops),
    .B(_014_),
    .Y(_015_)
  );
  NAND _156_ (
    .A(_015_),
    .B(reset_L),
    .Y(_016_)
  );
  NOR _157_ (
    .A(_016_),
    .B(_013_),
    .Y(_000_[4])
  );
  NOR _158_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[5]),
    .Y(_017_)
  );
  NOT _159_ (
    .A(data_in_Flops[5]),
    .Y(_018_)
  );
  NAND _160_ (
    .A(valid_in_Flops),
    .B(_018_),
    .Y(_019_)
  );
  NAND _161_ (
    .A(_019_),
    .B(reset_L),
    .Y(_020_)
  );
  NOR _162_ (
    .A(_020_),
    .B(_017_),
    .Y(_000_[5])
  );
  NOR _163_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[6]),
    .Y(_021_)
  );
  NOT _164_ (
    .A(data_in_Flops[6]),
    .Y(_022_)
  );
  NAND _165_ (
    .A(valid_in_Flops),
    .B(_022_),
    .Y(_023_)
  );
  NAND _166_ (
    .A(_023_),
    .B(reset_L),
    .Y(_024_)
  );
  NOR _167_ (
    .A(_024_),
    .B(_021_),
    .Y(_000_[6])
  );
  NOR _168_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[7]),
    .Y(_025_)
  );
  NOT _169_ (
    .A(data_in_Flops[7]),
    .Y(_026_)
  );
  NAND _170_ (
    .A(valid_in_Flops),
    .B(_026_),
    .Y(_027_)
  );
  NAND _171_ (
    .A(_027_),
    .B(reset_L),
    .Y(_028_)
  );
  NOR _172_ (
    .A(_028_),
    .B(_025_),
    .Y(_000_[7])
  );
  NOR _173_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[8]),
    .Y(_029_)
  );
  NOT _174_ (
    .A(data_in_Flops[8]),
    .Y(_030_)
  );
  NAND _175_ (
    .A(valid_in_Flops),
    .B(_030_),
    .Y(_031_)
  );
  NAND _176_ (
    .A(_031_),
    .B(reset_L),
    .Y(_032_)
  );
  NOR _177_ (
    .A(_032_),
    .B(_029_),
    .Y(_000_[8])
  );
  NOR _178_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[9]),
    .Y(_033_)
  );
  NOT _179_ (
    .A(data_in_Flops[9]),
    .Y(_034_)
  );
  NAND _180_ (
    .A(valid_in_Flops),
    .B(_034_),
    .Y(_035_)
  );
  NAND _181_ (
    .A(_035_),
    .B(reset_L),
    .Y(_036_)
  );
  NOR _182_ (
    .A(_036_),
    .B(_033_),
    .Y(_000_[9])
  );
  NOR _183_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[10]),
    .Y(_037_)
  );
  NOT _184_ (
    .A(data_in_Flops[10]),
    .Y(_038_)
  );
  NAND _185_ (
    .A(valid_in_Flops),
    .B(_038_),
    .Y(_039_)
  );
  NAND _186_ (
    .A(_039_),
    .B(reset_L),
    .Y(_040_)
  );
  NOR _187_ (
    .A(_040_),
    .B(_037_),
    .Y(_000_[10])
  );
  NOR _188_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[11]),
    .Y(_041_)
  );
  NOT _189_ (
    .A(data_in_Flops[11]),
    .Y(_042_)
  );
  NAND _190_ (
    .A(valid_in_Flops),
    .B(_042_),
    .Y(_043_)
  );
  NAND _191_ (
    .A(_043_),
    .B(reset_L),
    .Y(_044_)
  );
  NOR _192_ (
    .A(_044_),
    .B(_041_),
    .Y(_000_[11])
  );
  NOR _193_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[12]),
    .Y(_045_)
  );
  NOT _194_ (
    .A(data_in_Flops[12]),
    .Y(_046_)
  );
  NAND _195_ (
    .A(valid_in_Flops),
    .B(_046_),
    .Y(_047_)
  );
  NAND _196_ (
    .A(_047_),
    .B(reset_L),
    .Y(_048_)
  );
  NOR _197_ (
    .A(_048_),
    .B(_045_),
    .Y(_000_[12])
  );
  NOR _198_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[13]),
    .Y(_049_)
  );
  NOT _199_ (
    .A(data_in_Flops[13]),
    .Y(_050_)
  );
  NAND _200_ (
    .A(valid_in_Flops),
    .B(_050_),
    .Y(_051_)
  );
  NAND _201_ (
    .A(_051_),
    .B(reset_L),
    .Y(_052_)
  );
  NOR _202_ (
    .A(_052_),
    .B(_049_),
    .Y(_000_[13])
  );
  NOR _203_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[14]),
    .Y(_053_)
  );
  NOT _204_ (
    .A(data_in_Flops[14]),
    .Y(_054_)
  );
  NAND _205_ (
    .A(valid_in_Flops),
    .B(_054_),
    .Y(_055_)
  );
  NAND _206_ (
    .A(_055_),
    .B(reset_L),
    .Y(_056_)
  );
  NOR _207_ (
    .A(_056_),
    .B(_053_),
    .Y(_000_[14])
  );
  NOR _208_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[15]),
    .Y(_057_)
  );
  NOT _209_ (
    .A(data_in_Flops[15]),
    .Y(_058_)
  );
  NAND _210_ (
    .A(valid_in_Flops),
    .B(_058_),
    .Y(_059_)
  );
  NAND _211_ (
    .A(_059_),
    .B(reset_L),
    .Y(_060_)
  );
  NOR _212_ (
    .A(_060_),
    .B(_057_),
    .Y(_000_[15])
  );
  NOR _213_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[16]),
    .Y(_061_)
  );
  NOT _214_ (
    .A(data_in_Flops[16]),
    .Y(_062_)
  );
  NAND _215_ (
    .A(valid_in_Flops),
    .B(_062_),
    .Y(_063_)
  );
  NAND _216_ (
    .A(_063_),
    .B(reset_L),
    .Y(_064_)
  );
  NOR _217_ (
    .A(_064_),
    .B(_061_),
    .Y(_000_[16])
  );
  NOR _218_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[17]),
    .Y(_065_)
  );
  NOT _219_ (
    .A(data_in_Flops[17]),
    .Y(_066_)
  );
  NAND _220_ (
    .A(valid_in_Flops),
    .B(_066_),
    .Y(_067_)
  );
  NAND _221_ (
    .A(_067_),
    .B(reset_L),
    .Y(_068_)
  );
  NOR _222_ (
    .A(_068_),
    .B(_065_),
    .Y(_000_[17])
  );
  NOR _223_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[18]),
    .Y(_069_)
  );
  NOT _224_ (
    .A(data_in_Flops[18]),
    .Y(_070_)
  );
  NAND _225_ (
    .A(valid_in_Flops),
    .B(_070_),
    .Y(_071_)
  );
  NAND _226_ (
    .A(_071_),
    .B(reset_L),
    .Y(_072_)
  );
  NOR _227_ (
    .A(_072_),
    .B(_069_),
    .Y(_000_[18])
  );
  NOR _228_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[19]),
    .Y(_073_)
  );
  NOT _229_ (
    .A(data_in_Flops[19]),
    .Y(_074_)
  );
  NAND _230_ (
    .A(valid_in_Flops),
    .B(_074_),
    .Y(_075_)
  );
  NAND _231_ (
    .A(_075_),
    .B(reset_L),
    .Y(_076_)
  );
  NOR _232_ (
    .A(_076_),
    .B(_073_),
    .Y(_000_[19])
  );
  NOR _233_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[20]),
    .Y(_077_)
  );
  NOT _234_ (
    .A(data_in_Flops[20]),
    .Y(_078_)
  );
  NAND _235_ (
    .A(valid_in_Flops),
    .B(_078_),
    .Y(_079_)
  );
  NAND _236_ (
    .A(_079_),
    .B(reset_L),
    .Y(_080_)
  );
  NOR _237_ (
    .A(_080_),
    .B(_077_),
    .Y(_000_[20])
  );
  NOR _238_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[21]),
    .Y(_081_)
  );
  NOT _239_ (
    .A(data_in_Flops[21]),
    .Y(_082_)
  );
  NAND _240_ (
    .A(valid_in_Flops),
    .B(_082_),
    .Y(_083_)
  );
  NAND _241_ (
    .A(_083_),
    .B(reset_L),
    .Y(_084_)
  );
  NOR _242_ (
    .A(_084_),
    .B(_081_),
    .Y(_000_[21])
  );
  NOR _243_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[22]),
    .Y(_085_)
  );
  NOT _244_ (
    .A(data_in_Flops[22]),
    .Y(_086_)
  );
  NAND _245_ (
    .A(valid_in_Flops),
    .B(_086_),
    .Y(_087_)
  );
  NAND _246_ (
    .A(_087_),
    .B(reset_L),
    .Y(_088_)
  );
  NOR _247_ (
    .A(_088_),
    .B(_085_),
    .Y(_000_[22])
  );
  NOR _248_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[23]),
    .Y(_089_)
  );
  NOT _249_ (
    .A(data_in_Flops[23]),
    .Y(_090_)
  );
  NAND _250_ (
    .A(valid_in_Flops),
    .B(_090_),
    .Y(_091_)
  );
  NAND _251_ (
    .A(_091_),
    .B(reset_L),
    .Y(_092_)
  );
  NOR _252_ (
    .A(_092_),
    .B(_089_),
    .Y(_000_[23])
  );
  NOR _253_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[24]),
    .Y(_093_)
  );
  NOT _254_ (
    .A(data_in_Flops[24]),
    .Y(_094_)
  );
  NAND _255_ (
    .A(valid_in_Flops),
    .B(_094_),
    .Y(_095_)
  );
  NAND _256_ (
    .A(_095_),
    .B(reset_L),
    .Y(_096_)
  );
  NOR _257_ (
    .A(_096_),
    .B(_093_),
    .Y(_000_[24])
  );
  NOR _258_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[25]),
    .Y(_097_)
  );
  NOT _259_ (
    .A(data_in_Flops[25]),
    .Y(_098_)
  );
  NAND _260_ (
    .A(valid_in_Flops),
    .B(_098_),
    .Y(_099_)
  );
  NAND _261_ (
    .A(_099_),
    .B(reset_L),
    .Y(_100_)
  );
  NOR _262_ (
    .A(_100_),
    .B(_097_),
    .Y(_000_[25])
  );
  NOR _263_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[26]),
    .Y(_101_)
  );
  NOT _264_ (
    .A(data_in_Flops[26]),
    .Y(_102_)
  );
  NAND _265_ (
    .A(valid_in_Flops),
    .B(_102_),
    .Y(_103_)
  );
  NAND _266_ (
    .A(_103_),
    .B(reset_L),
    .Y(_104_)
  );
  NOR _267_ (
    .A(_104_),
    .B(_101_),
    .Y(_000_[26])
  );
  NOR _268_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[27]),
    .Y(_105_)
  );
  NOT _269_ (
    .A(data_in_Flops[27]),
    .Y(_106_)
  );
  NAND _270_ (
    .A(valid_in_Flops),
    .B(_106_),
    .Y(_107_)
  );
  NAND _271_ (
    .A(_107_),
    .B(reset_L),
    .Y(_108_)
  );
  NOR _272_ (
    .A(_108_),
    .B(_105_),
    .Y(_000_[27])
  );
  NOR _273_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[28]),
    .Y(_109_)
  );
  NOT _274_ (
    .A(data_in_Flops[28]),
    .Y(_110_)
  );
  NAND _275_ (
    .A(valid_in_Flops),
    .B(_110_),
    .Y(_111_)
  );
  NAND _276_ (
    .A(_111_),
    .B(reset_L),
    .Y(_112_)
  );
  NOR _277_ (
    .A(_112_),
    .B(_109_),
    .Y(_000_[28])
  );
  NOR _278_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[29]),
    .Y(_113_)
  );
  NOT _279_ (
    .A(data_in_Flops[29]),
    .Y(_114_)
  );
  NAND _280_ (
    .A(valid_in_Flops),
    .B(_114_),
    .Y(_115_)
  );
  NAND _281_ (
    .A(_115_),
    .B(reset_L),
    .Y(_116_)
  );
  NOR _282_ (
    .A(_116_),
    .B(_113_),
    .Y(_000_[29])
  );
  NOR _283_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[30]),
    .Y(_117_)
  );
  NOT _284_ (
    .A(data_in_Flops[30]),
    .Y(_118_)
  );
  NAND _285_ (
    .A(valid_in_Flops),
    .B(_118_),
    .Y(_119_)
  );
  NAND _286_ (
    .A(_119_),
    .B(reset_L),
    .Y(_120_)
  );
  NOR _287_ (
    .A(_120_),
    .B(_117_),
    .Y(_000_[30])
  );
  NOR _288_ (
    .A(valid_in_Flops),
    .B(data_out_Flops[31]),
    .Y(_121_)
  );
  NOT _289_ (
    .A(data_in_Flops[31]),
    .Y(_122_)
  );
  NAND _290_ (
    .A(valid_in_Flops),
    .B(_122_),
    .Y(_123_)
  );
  NAND _291_ (
    .A(_123_),
    .B(reset_L),
    .Y(_124_)
  );
  NOR _292_ (
    .A(_124_),
    .B(_121_),
    .Y(_000_[31])
  );
  NOT _293_ (
    .A(reset_L),
    .Y(_125_)
  );
  DFF _294_ (
    .C(clk_Flops),
    .D(_000_[0]),
    .Q(data_out_Flops[0])
  );
  DFF _295_ (
    .C(clk_Flops),
    .D(_000_[1]),
    .Q(data_out_Flops[1])
  );
  DFF _296_ (
    .C(clk_Flops),
    .D(_000_[2]),
    .Q(data_out_Flops[2])
  );
  DFF _297_ (
    .C(clk_Flops),
    .D(_000_[3]),
    .Q(data_out_Flops[3])
  );
  DFF _298_ (
    .C(clk_Flops),
    .D(_000_[4]),
    .Q(data_out_Flops[4])
  );
  DFF _299_ (
    .C(clk_Flops),
    .D(_000_[5]),
    .Q(data_out_Flops[5])
  );
  DFF _300_ (
    .C(clk_Flops),
    .D(_000_[6]),
    .Q(data_out_Flops[6])
  );
  DFF _301_ (
    .C(clk_Flops),
    .D(_000_[7]),
    .Q(data_out_Flops[7])
  );
  DFF _302_ (
    .C(clk_Flops),
    .D(_000_[8]),
    .Q(data_out_Flops[8])
  );
  DFF _303_ (
    .C(clk_Flops),
    .D(_000_[9]),
    .Q(data_out_Flops[9])
  );
  DFF _304_ (
    .C(clk_Flops),
    .D(_000_[10]),
    .Q(data_out_Flops[10])
  );
  DFF _305_ (
    .C(clk_Flops),
    .D(_000_[11]),
    .Q(data_out_Flops[11])
  );
  DFF _306_ (
    .C(clk_Flops),
    .D(_000_[12]),
    .Q(data_out_Flops[12])
  );
  DFF _307_ (
    .C(clk_Flops),
    .D(_000_[13]),
    .Q(data_out_Flops[13])
  );
  DFF _308_ (
    .C(clk_Flops),
    .D(_000_[14]),
    .Q(data_out_Flops[14])
  );
  DFF _309_ (
    .C(clk_Flops),
    .D(_000_[15]),
    .Q(data_out_Flops[15])
  );
  DFF _310_ (
    .C(clk_Flops),
    .D(_000_[16]),
    .Q(data_out_Flops[16])
  );
  DFF _311_ (
    .C(clk_Flops),
    .D(_000_[17]),
    .Q(data_out_Flops[17])
  );
  DFF _312_ (
    .C(clk_Flops),
    .D(_000_[18]),
    .Q(data_out_Flops[18])
  );
  DFF _313_ (
    .C(clk_Flops),
    .D(_000_[19]),
    .Q(data_out_Flops[19])
  );
  DFF _314_ (
    .C(clk_Flops),
    .D(_000_[20]),
    .Q(data_out_Flops[20])
  );
  DFF _315_ (
    .C(clk_Flops),
    .D(_000_[21]),
    .Q(data_out_Flops[21])
  );
  DFF _316_ (
    .C(clk_Flops),
    .D(_000_[22]),
    .Q(data_out_Flops[22])
  );
  DFF _317_ (
    .C(clk_Flops),
    .D(_000_[23]),
    .Q(data_out_Flops[23])
  );
  DFF _318_ (
    .C(clk_Flops),
    .D(_000_[24]),
    .Q(data_out_Flops[24])
  );
  DFF _319_ (
    .C(clk_Flops),
    .D(_000_[25]),
    .Q(data_out_Flops[25])
  );
  DFF _320_ (
    .C(clk_Flops),
    .D(_000_[26]),
    .Q(data_out_Flops[26])
  );
  DFF _321_ (
    .C(clk_Flops),
    .D(_000_[27]),
    .Q(data_out_Flops[27])
  );
  DFF _322_ (
    .C(clk_Flops),
    .D(_000_[28]),
    .Q(data_out_Flops[28])
  );
  DFF _323_ (
    .C(clk_Flops),
    .D(_000_[29]),
    .Q(data_out_Flops[29])
  );
  DFF _324_ (
    .C(clk_Flops),
    .D(_000_[30]),
    .Q(data_out_Flops[30])
  );
  DFF _325_ (
    .C(clk_Flops),
    .D(_000_[31]),
    .Q(data_out_Flops[31])
  );
endmodule

(* src = "mux_unstriping_synth.v:1" *)
module mux_unstriping_synth(clk_2f, reset_L, data_in0, valid_in0, data_in1, valid_in1, data_out, valid_out);
  (* src = "mux_unstriping_synth.v:13" *)
  wire [31:0] _000_;
  (* src = "mux_unstriping_synth.v:13" *)
  wire _001_;
  (* src = "mux_unstriping_synth.v:13" *)
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  (* src = "mux_unstriping_synth.v:2" *)
  input clk_2f;
  (* src = "mux_unstriping_synth.v:4" *)
  input [31:0] data_in0;
  (* src = "mux_unstriping_synth.v:6" *)
  input [31:0] data_in1;
  (* src = "mux_unstriping_synth.v:8" *)
  output [31:0] data_out;
  (* src = "mux_unstriping_synth.v:3" *)
  input reset_L;
  (* src = "mux_unstriping_synth.v:11" *)
  wire selectorInterno;
  (* src = "mux_unstriping_synth.v:5" *)
  input valid_in0;
  (* src = "mux_unstriping_synth.v:7" *)
  input valid_in1;
  (* src = "mux_unstriping_synth.v:9" *)
  output valid_out;
  NOT _138_ (
    .A(selectorInterno),
    .Y(_003_)
  );
  NOT _139_ (
    .A(valid_in1),
    .Y(_004_)
  );
  NOR _140_ (
    .A(_004_),
    .B(_003_),
    .Y(_005_)
  );
  NOT _141_ (
    .A(valid_in0),
    .Y(_006_)
  );
  NAND _142_ (
    .A(_003_),
    .B(_006_),
    .Y(_007_)
  );
  NAND _143_ (
    .A(_007_),
    .B(reset_L),
    .Y(_008_)
  );
  NOR _144_ (
    .A(_008_),
    .B(_005_),
    .Y(_001_)
  );
  NOR _145_ (
    .A(valid_in1),
    .B(_003_),
    .Y(_009_)
  );
  NOR _146_ (
    .A(_009_),
    .B(_008_),
    .Y(_002_)
  );
  NOR _147_ (
    .A(data_in0[0]),
    .B(selectorInterno),
    .Y(_010_)
  );
  NOT _148_ (
    .A(data_in1[0]),
    .Y(_011_)
  );
  NAND _149_ (
    .A(_011_),
    .B(selectorInterno),
    .Y(_012_)
  );
  NAND _150_ (
    .A(_012_),
    .B(reset_L),
    .Y(_013_)
  );
  NOR _151_ (
    .A(_013_),
    .B(_010_),
    .Y(_000_[0])
  );
  NOR _152_ (
    .A(data_in0[1]),
    .B(selectorInterno),
    .Y(_014_)
  );
  NOT _153_ (
    .A(data_in1[1]),
    .Y(_015_)
  );
  NAND _154_ (
    .A(_015_),
    .B(selectorInterno),
    .Y(_016_)
  );
  NAND _155_ (
    .A(_016_),
    .B(reset_L),
    .Y(_017_)
  );
  NOR _156_ (
    .A(_017_),
    .B(_014_),
    .Y(_000_[1])
  );
  NOR _157_ (
    .A(data_in0[2]),
    .B(selectorInterno),
    .Y(_018_)
  );
  NOT _158_ (
    .A(data_in1[2]),
    .Y(_019_)
  );
  NAND _159_ (
    .A(_019_),
    .B(selectorInterno),
    .Y(_020_)
  );
  NAND _160_ (
    .A(_020_),
    .B(reset_L),
    .Y(_021_)
  );
  NOR _161_ (
    .A(_021_),
    .B(_018_),
    .Y(_000_[2])
  );
  NOR _162_ (
    .A(data_in0[3]),
    .B(selectorInterno),
    .Y(_022_)
  );
  NOT _163_ (
    .A(data_in1[3]),
    .Y(_023_)
  );
  NAND _164_ (
    .A(_023_),
    .B(selectorInterno),
    .Y(_024_)
  );
  NAND _165_ (
    .A(_024_),
    .B(reset_L),
    .Y(_025_)
  );
  NOR _166_ (
    .A(_025_),
    .B(_022_),
    .Y(_000_[3])
  );
  NOR _167_ (
    .A(data_in0[4]),
    .B(selectorInterno),
    .Y(_026_)
  );
  NOT _168_ (
    .A(data_in1[4]),
    .Y(_027_)
  );
  NAND _169_ (
    .A(_027_),
    .B(selectorInterno),
    .Y(_028_)
  );
  NAND _170_ (
    .A(_028_),
    .B(reset_L),
    .Y(_029_)
  );
  NOR _171_ (
    .A(_029_),
    .B(_026_),
    .Y(_000_[4])
  );
  NOR _172_ (
    .A(data_in0[5]),
    .B(selectorInterno),
    .Y(_030_)
  );
  NOT _173_ (
    .A(data_in1[5]),
    .Y(_031_)
  );
  NAND _174_ (
    .A(_031_),
    .B(selectorInterno),
    .Y(_032_)
  );
  NAND _175_ (
    .A(_032_),
    .B(reset_L),
    .Y(_033_)
  );
  NOR _176_ (
    .A(_033_),
    .B(_030_),
    .Y(_000_[5])
  );
  NOR _177_ (
    .A(data_in0[6]),
    .B(selectorInterno),
    .Y(_034_)
  );
  NOT _178_ (
    .A(data_in1[6]),
    .Y(_035_)
  );
  NAND _179_ (
    .A(_035_),
    .B(selectorInterno),
    .Y(_036_)
  );
  NAND _180_ (
    .A(_036_),
    .B(reset_L),
    .Y(_037_)
  );
  NOR _181_ (
    .A(_037_),
    .B(_034_),
    .Y(_000_[6])
  );
  NOR _182_ (
    .A(data_in0[7]),
    .B(selectorInterno),
    .Y(_038_)
  );
  NOT _183_ (
    .A(data_in1[7]),
    .Y(_039_)
  );
  NAND _184_ (
    .A(_039_),
    .B(selectorInterno),
    .Y(_040_)
  );
  NAND _185_ (
    .A(_040_),
    .B(reset_L),
    .Y(_041_)
  );
  NOR _186_ (
    .A(_041_),
    .B(_038_),
    .Y(_000_[7])
  );
  NOR _187_ (
    .A(data_in0[8]),
    .B(selectorInterno),
    .Y(_042_)
  );
  NOT _188_ (
    .A(data_in1[8]),
    .Y(_043_)
  );
  NAND _189_ (
    .A(_043_),
    .B(selectorInterno),
    .Y(_044_)
  );
  NAND _190_ (
    .A(_044_),
    .B(reset_L),
    .Y(_045_)
  );
  NOR _191_ (
    .A(_045_),
    .B(_042_),
    .Y(_000_[8])
  );
  NOR _192_ (
    .A(data_in0[9]),
    .B(selectorInterno),
    .Y(_046_)
  );
  NOT _193_ (
    .A(data_in1[9]),
    .Y(_047_)
  );
  NAND _194_ (
    .A(_047_),
    .B(selectorInterno),
    .Y(_048_)
  );
  NAND _195_ (
    .A(_048_),
    .B(reset_L),
    .Y(_049_)
  );
  NOR _196_ (
    .A(_049_),
    .B(_046_),
    .Y(_000_[9])
  );
  NOR _197_ (
    .A(data_in0[10]),
    .B(selectorInterno),
    .Y(_050_)
  );
  NOT _198_ (
    .A(data_in1[10]),
    .Y(_051_)
  );
  NAND _199_ (
    .A(_051_),
    .B(selectorInterno),
    .Y(_052_)
  );
  NAND _200_ (
    .A(_052_),
    .B(reset_L),
    .Y(_053_)
  );
  NOR _201_ (
    .A(_053_),
    .B(_050_),
    .Y(_000_[10])
  );
  NOR _202_ (
    .A(data_in0[11]),
    .B(selectorInterno),
    .Y(_054_)
  );
  NOT _203_ (
    .A(data_in1[11]),
    .Y(_055_)
  );
  NAND _204_ (
    .A(_055_),
    .B(selectorInterno),
    .Y(_056_)
  );
  NAND _205_ (
    .A(_056_),
    .B(reset_L),
    .Y(_057_)
  );
  NOR _206_ (
    .A(_057_),
    .B(_054_),
    .Y(_000_[11])
  );
  NOR _207_ (
    .A(data_in0[12]),
    .B(selectorInterno),
    .Y(_058_)
  );
  NOT _208_ (
    .A(data_in1[12]),
    .Y(_059_)
  );
  NAND _209_ (
    .A(_059_),
    .B(selectorInterno),
    .Y(_060_)
  );
  NAND _210_ (
    .A(_060_),
    .B(reset_L),
    .Y(_061_)
  );
  NOR _211_ (
    .A(_061_),
    .B(_058_),
    .Y(_000_[12])
  );
  NOR _212_ (
    .A(data_in0[13]),
    .B(selectorInterno),
    .Y(_062_)
  );
  NOT _213_ (
    .A(data_in1[13]),
    .Y(_063_)
  );
  NAND _214_ (
    .A(_063_),
    .B(selectorInterno),
    .Y(_064_)
  );
  NAND _215_ (
    .A(_064_),
    .B(reset_L),
    .Y(_065_)
  );
  NOR _216_ (
    .A(_065_),
    .B(_062_),
    .Y(_000_[13])
  );
  NOR _217_ (
    .A(data_in0[14]),
    .B(selectorInterno),
    .Y(_066_)
  );
  NOT _218_ (
    .A(data_in1[14]),
    .Y(_067_)
  );
  NAND _219_ (
    .A(_067_),
    .B(selectorInterno),
    .Y(_068_)
  );
  NAND _220_ (
    .A(_068_),
    .B(reset_L),
    .Y(_069_)
  );
  NOR _221_ (
    .A(_069_),
    .B(_066_),
    .Y(_000_[14])
  );
  NOR _222_ (
    .A(data_in0[15]),
    .B(selectorInterno),
    .Y(_070_)
  );
  NOT _223_ (
    .A(data_in1[15]),
    .Y(_071_)
  );
  NAND _224_ (
    .A(_071_),
    .B(selectorInterno),
    .Y(_072_)
  );
  NAND _225_ (
    .A(_072_),
    .B(reset_L),
    .Y(_073_)
  );
  NOR _226_ (
    .A(_073_),
    .B(_070_),
    .Y(_000_[15])
  );
  NOR _227_ (
    .A(data_in0[16]),
    .B(selectorInterno),
    .Y(_074_)
  );
  NOT _228_ (
    .A(data_in1[16]),
    .Y(_075_)
  );
  NAND _229_ (
    .A(_075_),
    .B(selectorInterno),
    .Y(_076_)
  );
  NAND _230_ (
    .A(_076_),
    .B(reset_L),
    .Y(_077_)
  );
  NOR _231_ (
    .A(_077_),
    .B(_074_),
    .Y(_000_[16])
  );
  NOR _232_ (
    .A(data_in0[17]),
    .B(selectorInterno),
    .Y(_078_)
  );
  NOT _233_ (
    .A(data_in1[17]),
    .Y(_079_)
  );
  NAND _234_ (
    .A(_079_),
    .B(selectorInterno),
    .Y(_080_)
  );
  NAND _235_ (
    .A(_080_),
    .B(reset_L),
    .Y(_081_)
  );
  NOR _236_ (
    .A(_081_),
    .B(_078_),
    .Y(_000_[17])
  );
  NOR _237_ (
    .A(data_in0[18]),
    .B(selectorInterno),
    .Y(_082_)
  );
  NOT _238_ (
    .A(data_in1[18]),
    .Y(_083_)
  );
  NAND _239_ (
    .A(_083_),
    .B(selectorInterno),
    .Y(_084_)
  );
  NAND _240_ (
    .A(_084_),
    .B(reset_L),
    .Y(_085_)
  );
  NOR _241_ (
    .A(_085_),
    .B(_082_),
    .Y(_000_[18])
  );
  NOR _242_ (
    .A(data_in0[19]),
    .B(selectorInterno),
    .Y(_086_)
  );
  NOT _243_ (
    .A(data_in1[19]),
    .Y(_087_)
  );
  NAND _244_ (
    .A(_087_),
    .B(selectorInterno),
    .Y(_088_)
  );
  NAND _245_ (
    .A(_088_),
    .B(reset_L),
    .Y(_089_)
  );
  NOR _246_ (
    .A(_089_),
    .B(_086_),
    .Y(_000_[19])
  );
  NOR _247_ (
    .A(data_in0[20]),
    .B(selectorInterno),
    .Y(_090_)
  );
  NOT _248_ (
    .A(data_in1[20]),
    .Y(_091_)
  );
  NAND _249_ (
    .A(_091_),
    .B(selectorInterno),
    .Y(_092_)
  );
  NAND _250_ (
    .A(_092_),
    .B(reset_L),
    .Y(_093_)
  );
  NOR _251_ (
    .A(_093_),
    .B(_090_),
    .Y(_000_[20])
  );
  NOR _252_ (
    .A(data_in0[21]),
    .B(selectorInterno),
    .Y(_094_)
  );
  NOT _253_ (
    .A(data_in1[21]),
    .Y(_095_)
  );
  NAND _254_ (
    .A(_095_),
    .B(selectorInterno),
    .Y(_096_)
  );
  NAND _255_ (
    .A(_096_),
    .B(reset_L),
    .Y(_097_)
  );
  NOR _256_ (
    .A(_097_),
    .B(_094_),
    .Y(_000_[21])
  );
  NOR _257_ (
    .A(data_in0[22]),
    .B(selectorInterno),
    .Y(_098_)
  );
  NOT _258_ (
    .A(data_in1[22]),
    .Y(_099_)
  );
  NAND _259_ (
    .A(_099_),
    .B(selectorInterno),
    .Y(_100_)
  );
  NAND _260_ (
    .A(_100_),
    .B(reset_L),
    .Y(_101_)
  );
  NOR _261_ (
    .A(_101_),
    .B(_098_),
    .Y(_000_[22])
  );
  NOR _262_ (
    .A(data_in0[23]),
    .B(selectorInterno),
    .Y(_102_)
  );
  NOT _263_ (
    .A(data_in1[23]),
    .Y(_103_)
  );
  NAND _264_ (
    .A(_103_),
    .B(selectorInterno),
    .Y(_104_)
  );
  NAND _265_ (
    .A(_104_),
    .B(reset_L),
    .Y(_105_)
  );
  NOR _266_ (
    .A(_105_),
    .B(_102_),
    .Y(_000_[23])
  );
  NOR _267_ (
    .A(data_in0[24]),
    .B(selectorInterno),
    .Y(_106_)
  );
  NOT _268_ (
    .A(data_in1[24]),
    .Y(_107_)
  );
  NAND _269_ (
    .A(_107_),
    .B(selectorInterno),
    .Y(_108_)
  );
  NAND _270_ (
    .A(_108_),
    .B(reset_L),
    .Y(_109_)
  );
  NOR _271_ (
    .A(_109_),
    .B(_106_),
    .Y(_000_[24])
  );
  NOR _272_ (
    .A(data_in0[25]),
    .B(selectorInterno),
    .Y(_110_)
  );
  NOT _273_ (
    .A(data_in1[25]),
    .Y(_111_)
  );
  NAND _274_ (
    .A(_111_),
    .B(selectorInterno),
    .Y(_112_)
  );
  NAND _275_ (
    .A(_112_),
    .B(reset_L),
    .Y(_113_)
  );
  NOR _276_ (
    .A(_113_),
    .B(_110_),
    .Y(_000_[25])
  );
  NOR _277_ (
    .A(data_in0[26]),
    .B(selectorInterno),
    .Y(_114_)
  );
  NOT _278_ (
    .A(data_in1[26]),
    .Y(_115_)
  );
  NAND _279_ (
    .A(_115_),
    .B(selectorInterno),
    .Y(_116_)
  );
  NAND _280_ (
    .A(_116_),
    .B(reset_L),
    .Y(_117_)
  );
  NOR _281_ (
    .A(_117_),
    .B(_114_),
    .Y(_000_[26])
  );
  NOR _282_ (
    .A(data_in0[27]),
    .B(selectorInterno),
    .Y(_118_)
  );
  NOT _283_ (
    .A(data_in1[27]),
    .Y(_119_)
  );
  NAND _284_ (
    .A(_119_),
    .B(selectorInterno),
    .Y(_120_)
  );
  NAND _285_ (
    .A(_120_),
    .B(reset_L),
    .Y(_121_)
  );
  NOR _286_ (
    .A(_121_),
    .B(_118_),
    .Y(_000_[27])
  );
  NOR _287_ (
    .A(data_in0[28]),
    .B(selectorInterno),
    .Y(_122_)
  );
  NOT _288_ (
    .A(data_in1[28]),
    .Y(_123_)
  );
  NAND _289_ (
    .A(_123_),
    .B(selectorInterno),
    .Y(_124_)
  );
  NAND _290_ (
    .A(_124_),
    .B(reset_L),
    .Y(_125_)
  );
  NOR _291_ (
    .A(_125_),
    .B(_122_),
    .Y(_000_[28])
  );
  NOR _292_ (
    .A(data_in0[29]),
    .B(selectorInterno),
    .Y(_126_)
  );
  NOT _293_ (
    .A(data_in1[29]),
    .Y(_127_)
  );
  NAND _294_ (
    .A(_127_),
    .B(selectorInterno),
    .Y(_128_)
  );
  NAND _295_ (
    .A(_128_),
    .B(reset_L),
    .Y(_129_)
  );
  NOR _296_ (
    .A(_129_),
    .B(_126_),
    .Y(_000_[29])
  );
  NOR _297_ (
    .A(data_in0[30]),
    .B(selectorInterno),
    .Y(_130_)
  );
  NOT _298_ (
    .A(data_in1[30]),
    .Y(_131_)
  );
  NAND _299_ (
    .A(_131_),
    .B(selectorInterno),
    .Y(_132_)
  );
  NAND _300_ (
    .A(_132_),
    .B(reset_L),
    .Y(_133_)
  );
  NOR _301_ (
    .A(_133_),
    .B(_130_),
    .Y(_000_[30])
  );
  NOR _302_ (
    .A(data_in0[31]),
    .B(selectorInterno),
    .Y(_134_)
  );
  NOT _303_ (
    .A(data_in1[31]),
    .Y(_135_)
  );
  NAND _304_ (
    .A(_135_),
    .B(selectorInterno),
    .Y(_136_)
  );
  NAND _305_ (
    .A(_136_),
    .B(reset_L),
    .Y(_137_)
  );
  NOR _306_ (
    .A(_137_),
    .B(_134_),
    .Y(_000_[31])
  );
  DFF _307_ (
    .C(clk_2f),
    .D(_000_[0]),
    .Q(data_out[0])
  );
  DFF _308_ (
    .C(clk_2f),
    .D(_000_[1]),
    .Q(data_out[1])
  );
  DFF _309_ (
    .C(clk_2f),
    .D(_000_[2]),
    .Q(data_out[2])
  );
  DFF _310_ (
    .C(clk_2f),
    .D(_000_[3]),
    .Q(data_out[3])
  );
  DFF _311_ (
    .C(clk_2f),
    .D(_000_[4]),
    .Q(data_out[4])
  );
  DFF _312_ (
    .C(clk_2f),
    .D(_000_[5]),
    .Q(data_out[5])
  );
  DFF _313_ (
    .C(clk_2f),
    .D(_000_[6]),
    .Q(data_out[6])
  );
  DFF _314_ (
    .C(clk_2f),
    .D(_000_[7]),
    .Q(data_out[7])
  );
  DFF _315_ (
    .C(clk_2f),
    .D(_000_[8]),
    .Q(data_out[8])
  );
  DFF _316_ (
    .C(clk_2f),
    .D(_000_[9]),
    .Q(data_out[9])
  );
  DFF _317_ (
    .C(clk_2f),
    .D(_000_[10]),
    .Q(data_out[10])
  );
  DFF _318_ (
    .C(clk_2f),
    .D(_000_[11]),
    .Q(data_out[11])
  );
  DFF _319_ (
    .C(clk_2f),
    .D(_000_[12]),
    .Q(data_out[12])
  );
  DFF _320_ (
    .C(clk_2f),
    .D(_000_[13]),
    .Q(data_out[13])
  );
  DFF _321_ (
    .C(clk_2f),
    .D(_000_[14]),
    .Q(data_out[14])
  );
  DFF _322_ (
    .C(clk_2f),
    .D(_000_[15]),
    .Q(data_out[15])
  );
  DFF _323_ (
    .C(clk_2f),
    .D(_000_[16]),
    .Q(data_out[16])
  );
  DFF _324_ (
    .C(clk_2f),
    .D(_000_[17]),
    .Q(data_out[17])
  );
  DFF _325_ (
    .C(clk_2f),
    .D(_000_[18]),
    .Q(data_out[18])
  );
  DFF _326_ (
    .C(clk_2f),
    .D(_000_[19]),
    .Q(data_out[19])
  );
  DFF _327_ (
    .C(clk_2f),
    .D(_000_[20]),
    .Q(data_out[20])
  );
  DFF _328_ (
    .C(clk_2f),
    .D(_000_[21]),
    .Q(data_out[21])
  );
  DFF _329_ (
    .C(clk_2f),
    .D(_000_[22]),
    .Q(data_out[22])
  );
  DFF _330_ (
    .C(clk_2f),
    .D(_000_[23]),
    .Q(data_out[23])
  );
  DFF _331_ (
    .C(clk_2f),
    .D(_000_[24]),
    .Q(data_out[24])
  );
  DFF _332_ (
    .C(clk_2f),
    .D(_000_[25]),
    .Q(data_out[25])
  );
  DFF _333_ (
    .C(clk_2f),
    .D(_000_[26]),
    .Q(data_out[26])
  );
  DFF _334_ (
    .C(clk_2f),
    .D(_000_[27]),
    .Q(data_out[27])
  );
  DFF _335_ (
    .C(clk_2f),
    .D(_000_[28]),
    .Q(data_out[28])
  );
  DFF _336_ (
    .C(clk_2f),
    .D(_000_[29]),
    .Q(data_out[29])
  );
  DFF _337_ (
    .C(clk_2f),
    .D(_000_[30]),
    .Q(data_out[30])
  );
  DFF _338_ (
    .C(clk_2f),
    .D(_000_[31]),
    .Q(data_out[31])
  );
  DFF _339_ (
    .C(clk_2f),
    .D(_002_),
    .Q(valid_out)
  );
  DFF _340_ (
    .C(clk_2f),
    .D(_001_),
    .Q(selectorInterno)
  );
endmodule

(* top =  1  *)
(* src = "phy_rx.v:6" *)
module phy_rx_synth(clk_f, clk_2f, clk_4f, clk_32f, data_in0, data_in1, reset, data_out_phyrx_synth, valid_out_phyrx_synth, active0_synth, active1_synth);
  (* src = "phy_rx.v:16" *)
  output active0_synth;
  (* src = "phy_rx.v:17" *)
  output active1_synth;
  (* src = "phy_rx.v:8" *)
  input clk_2f;
  (* src = "phy_rx.v:10" *)
  input clk_32f;
  (* src = "phy_rx.v:9" *)
  input clk_4f;
  (* src = "phy_rx.v:7" *)
  input clk_f;
  (* src = "phy_rx.v:11" *)
  input data_in0;
  (* src = "phy_rx.v:12" *)
  input data_in1;
  (* src = "phy_rx.v:14" *)
  output [31:0] data_out_phyrx_synth;
  (* src = "phy_rx.v:13" *)
  input reset;
  (* src = "phy_rx.v:21" *)
  wire [31:0] salida_mux8_32_0;
  (* src = "phy_rx.v:21" *)
  wire [31:0] salida_mux8_32_1;
  (* src = "phy_rx.v:19" *)
  wire [7:0] salida_sp0;
  (* src = "phy_rx.v:19" *)
  wire [7:0] salida_sp1;
  (* src = "phy_rx.v:23" *)
  wire [31:0] salida_unstripping;
  (* src = "phy_rx.v:22" *)
  wire valid_m0;
  (* src = "phy_rx.v:22" *)
  wire valid_m1;
  (* src = "phy_rx.v:15" *)
  output valid_out_phyrx_synth;
  (* src = "phy_rx.v:20" *)
  wire valid_sp0;
  (* src = "phy_rx.v:20" *)
  wire valid_sp1;
  (* src = "phy_rx.v:24" *)
  wire valid_unstripping;
  (* src = "phy_rx.v:36" *)
  module_Flops_synth flops (
    .clk_Flops(clk_2f),
    .data_in_Flops(salida_unstripping),
    .data_out_Flops(data_out_phyrx_synth),
    .reset_L(reset),
    .valid_in_Flops(valid_unstripping),
    .valid_out_Flops(valid_out_phyrx_synth)
  );
  (* src = "phy_rx.v:30" *)
  Mux8_32_synth mux8_32_0 (
    .clk_4f(clk_4f),
    .clk_f(clk_f),
    .data_in(salida_sp0),
    .data_out(salida_mux8_32_0),
    .reset(reset),
    .valid_in(valid_sp0),
    .valid_out(valid_m0)
  );
  (* src = "phy_rx.v:32" *)
  Mux8_32_synth mux8_32_1 (
    .clk_4f(clk_4f),
    .clk_f(clk_f),
    .data_in(salida_sp1),
    .data_out(salida_mux8_32_1),
    .reset(reset),
    .valid_in(valid_sp1),
    .valid_out(valid_m1)
  );
  (* src = "phy_rx.v:34" *)
  mux_unstriping_synth mux_unstriping0 (
    .clk_2f(clk_2f),
    .data_in0(salida_mux8_32_0),
    .data_in1(salida_mux8_32_1),
    .data_out(salida_unstripping),
    .reset_L(reset),
    .valid_in0(valid_m0),
    .valid_in1(valid_m1),
    .valid_out(valid_unstripping)
  );
  (* src = "phy_rx.v:26" *)
  Serial_Paralelo_synth sp0 (
    .active(active0_synth),
    .clk_32f(clk_32f),
    .clk_4f(clk_4f),
    .data_in(data_in0),
    .data_out(salida_sp0),
    .reset(reset),
    .valid_out(valid_sp0)
  );
  (* src = "phy_rx.v:28" *)
  Serial_Paralelo_synth sp1 (
    .active(active1_synth),
    .clk_32f(clk_32f),
    .clk_4f(clk_4f),
    .data_in(data_in1),
    .data_out(salida_sp1),
    .reset(reset),
    .valid_out(valid_sp1)
  );
endmodule
